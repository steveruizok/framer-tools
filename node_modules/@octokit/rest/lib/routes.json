{
  "activity": {
    "checkNotificationThreadSubscription": {
      "alias": "activity.getThreadSubscription",
      "deprecated": "`activity.checkNotificationThreadSubscription()` is deprecated, use `activity.getThreadSubscription()`"
    },
    "checkStarringRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    },
    "deleteNotificationThreadSubscription": {
      "alias": "activity.deleteThreadSubscription",
      "deprecated": "`activity.deleteNotificationThreadSubscription()` is deprecated, use `activity.deleteThreadSubscription()`"
    },
    "deleteRepoSubscription": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "deleteThreadSubscription": {
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "thread_id",
          "deprecated": true
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "getEvents": {
      "alias": "activity.listPublicEvents",
      "deprecated": "`activity.getEvents()` is deprecated, use `activity.listPublicEvents()`"
    },
    "getEventsForOrg": {
      "alias": "activity.listPublicEventsForOrg",
      "deprecated": "`activity.getEventsForOrg()` is deprecated, use `activity.listPublicEventsForOrg()`"
    },
    "getEventsForRepo": {
      "alias": "activity.listRepoEvents",
      "deprecated": "`activity.getEventsForRepo()` is deprecated, use `activity.listRepoEvents()`"
    },
    "getEventsForRepoIssues": {
      "alias": "issues.listEventsForRepo",
      "deprecated": "`activity.getEventsForRepoIssues()` is deprecated, use `issues.listEventsForRepo`",
      "params": {}
    },
    "getEventsForRepoNetwork": {
      "alias": "activity.listPublicEventsForRepoNetwork",
      "deprecated": "`activity.getEventsForRepoNetwork()` is deprecated, use `activity.listPublicEventsForRepoNetwork()`"
    },
    "getEventsForUser": {
      "alias": "activity.listEventsForUser",
      "deprecated": "`activity.getEventsForUser()` is deprecated, use `activity.listEventsForUser()`"
    },
    "getEventsForUserOrg": {
      "alias": "activity.listEventsForOrg",
      "deprecated": "`activity.getEventsForUserOrg()` is deprecated, use `activity.listEventsForOrg()`"
    },
    "getEventsForUserPublic": {
      "alias": "activity.listPublicEventsForUser",
      "deprecated": "`activity.getEventsForUserPublic()` is deprecated, use `activity.listPublicEventsForUser()`"
    },
    "getEventsReceived": {
      "alias": "activity.listReceivedEventsForUser",
      "deprecated": "`activity.getEventsReceived()` is deprecated, use `activity.listReceivedEventsForUser()`"
    },
    "getEventsReceivedPublic": {
      "alias": "activity.listReceivedPublicEventsForUser",
      "deprecated": "`activity.getEventsReceivedPublic()` is deprecated, use `activity.listReceivedPublicEventsForUser()`"
    },
    "getFeeds": {
      "alias": "activity.listFeeds",
      "deprecated": "`activity.getFeeds()` is deprecated, use `activity.listFeeds()`"
    },
    "getNotificationThread": {
      "alias": "activity.getThread",
      "deprecated": "`activity.getNotificationThread()` is deprecated, use `activity.getThread()`"
    },
    "getNotifications": {
      "alias": "activity.listNotifications",
      "deprecated": "`activity.getNotifications()` is deprecated, use `activity.listNotifications()`"
    },
    "getNotificationsForUser": {
      "alias": "activity.listNotificationsForRepo",
      "deprecated": "`activity.getNotificationsForUser()` is deprecated, use `activity.listNotificationsForRepo()`"
    },
    "getRepoSubscription": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "getStargazersForRepo": {
      "alias": "activity.listStargazersForRepo",
      "deprecated": "`activity.getStargazersForRepo()` is deprecated, use `activity.listStargazersForRepo()`"
    },
    "getStarredRepos": {
      "alias": "activity.listReposStarredByAuthenticatedUser",
      "deprecated": "`activity.getStarredRepos()` is deprecated, use `activity.listReposStarredByAuthenticatedUser()`"
    },
    "getStarredReposForUser": {
      "alias": "activity.listReposStarredByUser",
      "deprecated": "`activity.getStarredReposForUser()` is deprecated, use `activity.listReposStarredByUser()`"
    },
    "getThread": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "thread_id",
          "deprecated": true
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id"
    },
    "getThreadSubscription": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "thread_id",
          "deprecated": true
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "getWatchedRepos": {
      "alias": "activity.listWatchedReposForAuthenticatedUser",
      "deprecated": "`activity.getWatchedRepos()` is deprecated, use `activity.listWatchedReposForAuthenticatedUser()`"
    },
    "getWatchedReposForUser": {
      "alias": "activity.listReposWatchedByUser",
      "deprecated": "`activity.getWatchedReposForUser()` is deprecated, use `activity.listReposWatchedByUser()`"
    },
    "getWatchersForRepo": {
      "alias": "activity.listWatchersForRepo",
      "deprecated": "`activity.getWatchersForRepo()` is deprecated, use `activity.listWatchersForRepo()`"
    },
    "listEventsForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events/orgs/:org"
    },
    "listEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events"
    },
    "listFeeds": {
      "method": "GET",
      "params": {},
      "url": "/feeds"
    },
    "listNotifications": {
      "method": "GET",
      "params": {
        "all": {
          "type": "boolean"
        },
        "before": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "participating": {
          "type": "boolean"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/notifications"
    },
    "listNotificationsForRepo": {
      "method": "GET",
      "params": {
        "all": {
          "type": "boolean"
        },
        "before": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "participating": {
          "type": "boolean"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/notifications"
    },
    "listPublicEvents": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/events"
    },
    "listPublicEventsForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/events"
    },
    "listPublicEventsForRepoNetwork": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/networks/:owner/:repo/events"
    },
    "listPublicEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/events/public"
    },
    "listReceivedEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/received_events"
    },
    "listReceivedPublicEventsForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/received_events/public"
    },
    "listRepoEvents": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/events"
    },
    "listReposStarredByAuthenticatedUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/user/starred"
    },
    "listReposStarredByUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/starred"
    },
    "listReposWatchedByUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/subscriptions"
    },
    "listStargazersForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stargazers"
    },
    "listWatchedReposForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/subscriptions"
    },
    "listWatchersForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/subscribers"
    },
    "markAsRead": {
      "method": "PUT",
      "params": {
        "last_read_at": {
          "type": "string"
        }
      },
      "url": "/notifications"
    },
    "markNotificationThreadAsRead": {
      "alias": "activity.markThreadAsRead",
      "deprecated": "`activity.markNotificationThreadAsRead()` is deprecated, use `activity.markThreadAsRead()`"
    },
    "markNotificationsAsRead": {
      "alias": "activity.markAsRead",
      "deprecated": "`activity.markNotificationsAsRead()` is deprecated, use `activity.markAsRead()`"
    },
    "markNotificationsAsReadForRepo": {
      "method": "PUT",
      "params": {
        "last_read_at": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/notifications"
    },
    "markThreadAsRead": {
      "method": "PATCH",
      "params": {
        "id": {
          "alias": "thread_id",
          "deprecated": true
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id"
    },
    "setNotificationThreadSubscription": {
      "alias": "activity.setThreadSubscription",
      "deprecated": "`activity.setNotificationThreadSubscription()` is deprecated, use `activity.setThreadSubscription()`"
    },
    "setRepoSubscription": {
      "method": "PUT",
      "params": {
        "ignored": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "subscribed": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/subscription"
    },
    "setThreadSubscription": {
      "method": "PUT",
      "params": {
        "id": {
          "alias": "thread_id",
          "deprecated": true
        },
        "ignored": {
          "type": "boolean"
        },
        "thread_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/notifications/threads/:thread_id/subscription"
    },
    "starRepo": {
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    },
    "unstarRepo": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/starred/:owner/:repo"
    },
    "unwatchRepo": {
      "alias": "activity.deleteRepoSubscription",
      "deprecated": "`activity.unwatchRepo()` is deprecated, use `activity.deleteRepoSubscription()`"
    }
  },
  "apps": {
    "addRepoToInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "PUT",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories/:repository_id"
    },
    "checkAccountIsAssociatedWithAny": {
      "method": "GET",
      "params": {
        "account_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "account_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/marketplace_listing/accounts/:account_id"
    },
    "checkAccountIsAssociatedWithAnyStubbed": {
      "method": "GET",
      "params": {
        "account_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "account_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/marketplace_listing/stubbed/accounts/:account_id"
    },
    "checkMarketplaceListingAccount": {
      "alias": "apps.checkAccountIsAssociatedWithAny",
      "deprecated": "`apps.checkMarketplaceListingAccount()` is deprecated, use `apps.checkAccountIsAssociatedWithAny()`"
    },
    "checkMarketplaceListingStubbedAccount": {
      "alias": "apps.checkAccountIsAssociatedWithAnyStubbed",
      "deprecated": "`apps.checkMarketplaceListingStubbedAccount()` is deprecated, use `apps.checkAccountIsAssociatedWithAnyStubbed()`"
    },
    "createFromManifest": {
      "headers": {
        "accept": "application/vnd.github.fury-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "POST",
      "params": {
        "code": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/app-manifests/:code/conversions"
    },
    "createInstallationToken": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "POST",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/app/installations/:installation_id/access_tokens"
    },
    "findOrgInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/installation"
    },
    "findRepoInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/installation"
    },
    "findUserInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/installation"
    },
    "get": {
      "alias": "apps.getAuthenticated",
      "deprecated": "`apps.get()` is deprecated, use `apps.getAuthenticated()`"
    },
    "getAuthenticated": {
      "method": "GET",
      "params": {},
      "url": "/app"
    },
    "getBySlug": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "app_slug": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/apps/:app_slug"
    },
    "getForSlug": {
      "alias": "apps.getBySlug",
      "deprecated": "`apps.getForSlug()` is deprecated, use `apps.getBySlug()`"
    },
    "getInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/app/installations/:installation_id"
    },
    "getInstallationRepositories": {
      "alias": "apps.listRepos",
      "deprecated": "`apps.getInstallationRepositories()` is deprecated, use `apps.listRepos()`"
    },
    "getInstallations": {
      "alias": "apps.listInstallations",
      "deprecated": "`apps.getInstallations()` is deprecated, use `apps.listInstallations()`"
    },
    "getMarketplaceListingPlanAccounts": {
      "alias": "apps.listAccountsUserOrOrgOnPlan",
      "deprecated": "`apps.getMarketplaceListingPlanAccounts()` is deprecated, use `apps.listAccountsUserOrOrgOnPlan()`"
    },
    "getMarketplaceListingPlans": {
      "alias": "apps.listPlans",
      "deprecated": "`apps.getMarketplaceListingPlans()` is deprecated, use `apps.listPlans()`"
    },
    "getMarketplaceListingStubbedPlanAccounts": {
      "alias": "apps.listAccountsUserOrOrgOnPlanStubbed",
      "deprecated": "`apps.getMarketplaceListingStubbedPlanAccounts()` is deprecated, use `apps.listAccountsUserOrOrgOnPlanStubbed()`"
    },
    "getMarketplaceListingStubbedPlans": {
      "alias": "apps.listPlansStubbed",
      "deprecated": "`apps.getMarketplaceListingStubbedPlans()` is deprecated, use `apps.listPlansStubbed()`"
    },
    "listAccountsUserOrOrgOnPlan": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "id": {
          "alias": "plan_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "plan_id": {
          "required": true,
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/marketplace_listing/plans/:plan_id/accounts"
    },
    "listAccountsUserOrOrgOnPlanStubbed": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "id": {
          "alias": "plan_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "plan_id": {
          "required": true,
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/marketplace_listing/stubbed/plans/:plan_id/accounts"
    },
    "listInstallationReposForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories"
    },
    "listInstallations": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/app/installations"
    },
    "listInstallationsForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/installations"
    },
    "listMarketplacePurchasesForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/marketplace_purchases"
    },
    "listMarketplacePurchasesForAuthenticatedUserStubbed": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/marketplace_purchases/stubbed"
    },
    "listPlans": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/marketplace_listing/plans"
    },
    "listPlansStubbed": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/marketplace_listing/stubbed/plans"
    },
    "listRepos": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/installation/repositories"
    },
    "removeRepoFromInstallation": {
      "headers": {
        "accept": "application/vnd.github.machine-man-preview+json"
      },
      "method": "DELETE",
      "params": {
        "installation_id": {
          "required": true,
          "type": "integer"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/installations/:installation_id/repositories/:repository_id"
    }
  },
  "authorization": {
    "check": {
      "alias": "authorization.checkAuthorization",
      "deprecated": "`authorization.check()` is deprecated, use `authorization.checkAuthorization()`"
    },
    "checkAuthorization": {
      "method": "GET",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "create": {
      "alias": "authorization.createAuthorization",
      "deprecated": "`authorization.create()` is deprecated, use `authorization.createAuthorization()`"
    },
    "createAuthorization": {
      "method": "POST",
      "params": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "note": {
          "required": true,
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations"
    },
    "delete": {
      "alias": "authorization.deleteAuthorization",
      "deprecated": "`authorization.delete()` is deprecated, use `authorization.deleteAuthorization()`"
    },
    "deleteAuthorization": {
      "method": "DELETE",
      "params": {
        "authorization_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "authorization_id",
          "deprecated": true
        }
      },
      "url": "/authorizations/:authorization_id"
    },
    "deleteGrant": {
      "method": "DELETE",
      "params": {
        "grant_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "grant_id",
          "deprecated": true
        }
      },
      "url": "/applications/grants/:grant_id"
    },
    "get": {
      "alias": "authorization.getAuthorization",
      "deprecated": "`authorization.get()` is deprecated, use `authorization.getAuthorization()`"
    },
    "getAll": {
      "alias": "authorization.listAuthorizations",
      "deprecated": "`authorization.getAll()` is deprecated, use `authorization.listAuthorizations()`"
    },
    "getAuthorization": {
      "method": "GET",
      "params": {
        "authorization_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "authorization_id",
          "deprecated": true
        }
      },
      "url": "/authorizations/:authorization_id"
    },
    "getGrant": {
      "method": "GET",
      "params": {
        "grant_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "grant_id",
          "deprecated": true
        }
      },
      "url": "/applications/grants/:grant_id"
    },
    "getGrants": {
      "alias": "authorization.listGrants",
      "deprecated": "`authorization.getGrants()` is deprecated, use `authorization.listGrants()`"
    },
    "getOrCreateAuthorizationForApp": {
      "method": "PUT",
      "params": {
        "client_id": {
          "required": true,
          "type": "string"
        },
        "client_secret": {
          "required": true,
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/clients/:client_id"
    },
    "getOrCreateAuthorizationForAppAndFingerprint": {
      "alias": "authorization.getOrCreateAuthorizationForAppFingerprint",
      "deprecated": "`authorization.getOrCreateAuthorizationForAppAndFingerprint()` is deprecated, use `authorization.getOrCreateAuthorizationForAppFingerprint()`"
    },
    "getOrCreateAuthorizationForAppFingerprint": {
      "method": "PUT",
      "params": {
        "client_id": {
          "required": true,
          "type": "string"
        },
        "client_secret": {
          "required": true,
          "type": "string"
        },
        "fingerprint": {
          "required": true,
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/clients/:client_id/:fingerprint"
    },
    "listAuthorizations": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/authorizations"
    },
    "listGrants": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/applications/grants"
    },
    "reset": {
      "alias": "authorization.resetAuthorization",
      "deprecated": "`authorization.reset()` is deprecated, use `authorization.resetAuthorization()`"
    },
    "resetAuthorization": {
      "method": "POST",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "revoke": {
      "alias": "authorization.revokeAuthorizationForApplication",
      "deprecated": "`authorization.revoke()` is deprecated, use `authorization.revokeAuthorizationForApplication()`"
    },
    "revokeAuthorizationForApplication": {
      "method": "DELETE",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/tokens/:access_token"
    },
    "revokeGrant": {
      "alias": "authorization.revokeGrantForApplication",
      "deprecated": "`authorization.revokeGrant()` is deprecated, use `authorization.revokeGrantForApplication()`"
    },
    "revokeGrantForApplication": {
      "method": "DELETE",
      "params": {
        "access_token": {
          "required": true,
          "type": "string"
        },
        "client_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/applications/:client_id/grants/:access_token"
    },
    "update": {
      "alias": "authorization.updateAuthorization",
      "deprecated": "`authorization.update()` is deprecated, use `authorization.updateAuthorization()`"
    },
    "updateAuthorization": {
      "method": "PATCH",
      "params": {
        "add_scopes": {
          "type": "string[]"
        },
        "authorization_id": {
          "required": true,
          "type": "integer"
        },
        "fingerprint": {
          "type": "string"
        },
        "id": {
          "alias": "authorization_id",
          "deprecated": true
        },
        "note": {
          "type": "string"
        },
        "note_url": {
          "type": "string"
        },
        "remove_scopes": {
          "type": "string[]"
        },
        "scopes": {
          "type": "string[]"
        }
      },
      "url": "/authorizations/:authorization_id"
    }
  },
  "checks": {
    "create": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "POST",
      "params": {
        "actions": {
          "type": "object[]"
        },
        "actions[].description": {
          "required": true,
          "type": "string"
        },
        "actions[].identifier": {
          "required": true,
          "type": "string"
        },
        "actions[].label": {
          "required": true,
          "type": "string"
        },
        "completed_at": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required"
          ],
          "type": "string"
        },
        "details_url": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "head_sha": {
          "required": true,
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "output": {
          "type": "object"
        },
        "output.annotations": {
          "type": "object[]"
        },
        "output.annotations[].annotation_level": {
          "enum": [
            "notice",
            "warning",
            "failure"
          ],
          "required": true,
          "type": "string"
        },
        "output.annotations[].end_column": {
          "type": "integer"
        },
        "output.annotations[].end_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].filename": {
          "alias": "output.annotations[].path",
          "deprecated": true
        },
        "output.annotations[].message": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].path": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].raw_details": {
          "type": "string"
        },
        "output.annotations[].start_column": {
          "type": "integer"
        },
        "output.annotations[].start_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].title": {
          "type": "string"
        },
        "output.annotations[].warning_level": {
          "alias": "output.annotations[].annotation_level",
          "deprecated": true
        },
        "output.images": {
          "type": "object[]"
        },
        "output.images[].alt": {
          "required": true,
          "type": "string"
        },
        "output.images[].caption": {
          "type": "string"
        },
        "output.images[].image_url": {
          "required": true,
          "type": "string"
        },
        "output.summary": {
          "required": true,
          "type": "string"
        },
        "output.text": {
          "type": "string"
        },
        "output.title": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs"
    },
    "createSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "head_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id"
    },
    "getSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "check_suite_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/:check_suite_id"
    },
    "listAnnotations": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id/annotations"
    },
    "listForRef": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "check_name": {
          "type": "string"
        },
        "filter": {
          "enum": [
            "latest",
            "all"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/check-runs"
    },
    "listForSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "check_name": {
          "type": "string"
        },
        "check_suite_id": {
          "required": true,
          "type": "integer"
        },
        "filter": {
          "enum": [
            "latest",
            "all"
          ],
          "type": "string"
        },
        "id": {
          "alias": "check_suite_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs"
    },
    "listSuitesForRef": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "GET",
      "params": {
        "app_id": {
          "type": "integer"
        },
        "check_name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/check-suites"
    },
    "requestSuites": {
      "deprecated": "use `rerequestSuite` instead",
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "head_sha": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suite-requests"
    },
    "rerequestSuite": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json"
      },
      "method": "POST",
      "params": {
        "check_suite_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/:check_suite_id/rerequest"
    },
    "setSuitesPreferences": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "PATCH",
      "params": {
        "auto_trigger_checks": {
          "type": "object[]"
        },
        "auto_trigger_checks[].app_id": {
          "required": true,
          "type": "integer"
        },
        "auto_trigger_checks[].setting": {
          "required": true,
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-suites/preferences"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.antiope-preview+json,application/vnd.github.machine-man-preview+json"
      },
      "method": "PATCH",
      "params": {
        "actions": {
          "type": "object[]"
        },
        "actions[].description": {
          "required": true,
          "type": "string"
        },
        "actions[].identifier": {
          "required": true,
          "type": "string"
        },
        "actions[].label": {
          "required": true,
          "type": "string"
        },
        "check_run_id": {
          "required": true,
          "type": "integer"
        },
        "completed_at": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required"
          ],
          "type": "string"
        },
        "details_url": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "output": {
          "type": "object"
        },
        "output.annotations": {
          "type": "object[]"
        },
        "output.annotations[].annotation_level": {
          "enum": [
            "notice",
            "warning",
            "failure"
          ],
          "required": true,
          "type": "string"
        },
        "output.annotations[].end_column": {
          "type": "integer"
        },
        "output.annotations[].end_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].filename": {
          "alias": "output.annotations[].path",
          "deprecated": true
        },
        "output.annotations[].message": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].path": {
          "required": true,
          "type": "string"
        },
        "output.annotations[].raw_details": {
          "type": "string"
        },
        "output.annotations[].start_column": {
          "type": "integer"
        },
        "output.annotations[].start_line": {
          "required": true,
          "type": "integer"
        },
        "output.annotations[].title": {
          "type": "string"
        },
        "output.annotations[].warning_level": {
          "alias": "output.annotations[].annotation_level",
          "deprecated": true
        },
        "output.images": {
          "type": "object[]"
        },
        "output.images[].alt": {
          "required": true,
          "type": "string"
        },
        "output.images[].caption": {
          "type": "string"
        },
        "output.images[].image_url": {
          "required": true,
          "type": "string"
        },
        "output.summary": {
          "required": true,
          "type": "string"
        },
        "output.text": {
          "type": "string"
        },
        "output.title": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/check-runs/:check_run_id"
    }
  },
  "codesOfConduct": {
    "getConductCode": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {
        "key": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/codes_of_conduct/:key"
    },
    "getForRepo": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/community/code_of_conduct"
    },
    "listConductCodes": {
      "headers": {
        "accept": "application/vnd.github.scarlet-witch-preview+json"
      },
      "method": "GET",
      "params": {},
      "url": "/codes_of_conduct"
    }
  },
  "emojis": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/emojis"
    }
  },
  "enterprise": {
    "createOrg": {
      "method": "POST",
      "params": {
        "admin": {
          "required": true,
          "type": "string"
        },
        "login": {
          "required": true,
          "type": "string"
        },
        "profile_name": {
          "type": "string"
        }
      },
      "url": "/admin/organizations"
    },
    "createPreReceiveEnvironment": {
      "method": "POST",
      "params": {
        "image_url": {
          "required": true,
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments"
    },
    "createPreReceiveHook": {
      "method": "POST",
      "params": {
        "allow_downstream_configuration": {
          "type": "boolean"
        },
        "enforcement": {
          "type": "string"
        },
        "environment": {
          "required": true,
          "type": "object"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "script": {
          "required": true,
          "type": "string"
        },
        "script_repository": {
          "required": true,
          "type": "object"
        }
      },
      "url": "/admin/pre-receive-hooks"
    },
    "deletePreReceiveEnvironment": {
      "method": "DELETE",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:id"
    },
    "deletePreReceiveHook": {
      "method": "DELETE",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre_receive_hooks/:id"
    },
    "editPreReceiveEnvironment": {
      "method": "PATCH",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        },
        "image_url": {
          "required": true,
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:id"
    },
    "editPreReceiveHook": {
      "method": "PATCH",
      "params": {
        "hook": {
          "mapTo": "data",
          "required": true,
          "type": "object"
        },
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre_receive_hooks/:id"
    },
    "getLicense": {
      "method": "GET",
      "params": {},
      "url": "/enterprise/settings/license"
    },
    "getPreReceiveEnvironment": {
      "method": "GET",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:id"
    },
    "getPreReceiveEnvironmentDownloadStatus": {
      "method": "GET",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:id/downloads/latest"
    },
    "getPreReceiveEnvironments": {
      "method": "GET",
      "params": {},
      "url": "/admin/pre-receive-environments"
    },
    "getPreReceiveHook": {
      "method": "GET",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-hooks/:id"
    },
    "getPreReceiveHooks": {
      "method": "GET",
      "params": {},
      "url": "/admin/pre-receive-hooks"
    },
    "queueIndexingJob": {
      "method": "POST",
      "params": {
        "target": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/staff/indexing_jobs"
    },
    "stats": {
      "method": "GET",
      "params": {
        "type": {
          "enum": [
            "issues",
            "hooks",
            "milestones",
            "orgs",
            "comments",
            "pages",
            "users",
            "gists",
            "pulls",
            "repos",
            "all"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/enterprise/stats/:type"
    },
    "syncLdapForTeam": {
      "method": "POST",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/ldap/teams/:team_id/sync"
    },
    "syncLdapForUser": {
      "method": "POST",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/ldap/users/:username/sync"
    },
    "triggerPreReceiveEnvironmentDownload": {
      "method": "POST",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/pre-receive-environments/:id/downloads"
    },
    "updateLdapForTeam": {
      "method": "PATCH",
      "params": {
        "ldap_dn": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/admin/ldap/teams/:team_id/mapping"
    },
    "updateLdapForUser": {
      "method": "PATCH",
      "params": {
        "ldap_dn": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/admin/ldap/users/:username/mapping"
    }
  },
  "gists": {
    "checkIsStarred": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "checkStar": {
      "alias": "gists.checkIsStarred",
      "deprecated": "`gists.checkStar()` is deprecated, use `gists.checkIsStarred()`"
    },
    "create": {
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "files": {
          "required": true,
          "type": "object"
        },
        "files.content": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      },
      "url": "/gists"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/comments"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    },
    "edit": {
      "alias": "gists.update",
      "deprecated": "`gists.edit()` is deprecated, use `gists.update()`"
    },
    "editComment": {
      "alias": "gists.updateComment",
      "deprecated": "`gists.editComment()` is deprecated, use `gists.updateComment()`"
    },
    "fork": {
      "method": "POST",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/forks"
    },
    "get": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id"
    },
    "getAll": {
      "alias": "gists.list",
      "deprecated": "`gists.getAll()` is deprecated, use `gists.list()`"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    },
    "getComments": {
      "alias": "gists.listComments",
      "deprecated": "`gists.getComments()` is deprecated, use `gists.listComments()`"
    },
    "getCommits": {
      "alias": "gists.listCommits",
      "deprecated": "`gists.getCommits()` is deprecated, use `gists.listCommits()`"
    },
    "getForUser": {
      "alias": "gists.listPublicForUser",
      "deprecated": "`gists.getForUser()` is deprecated, use `gists.listPublicForUser()`"
    },
    "getForks": {
      "alias": "gists.listForks",
      "deprecated": "`gists.getForks()` is deprecated, use `gists.listForks()`"
    },
    "getPublic": {
      "alias": "gists.listPublic",
      "deprecated": "`gists.getPublic()` is deprecated, use `gists.listPublic()`"
    },
    "getRevision": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gists/:gist_id/:sha"
    },
    "getStarred": {
      "alias": "gists.listStarred",
      "deprecated": "`gists.getStarred()` is deprecated, use `gists.listStarred()`"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/commits"
    },
    "listForks": {
      "method": "GET",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/gists/:gist_id/forks"
    },
    "listPublic": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists/public"
    },
    "listPublicForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/gists"
    },
    "listStarred": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/gists/starred"
    },
    "star": {
      "method": "PUT",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "unstar": {
      "method": "DELETE",
      "params": {
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/star"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "files": {
          "type": "object"
        },
        "files.content": {
          "type": "string"
        },
        "files.filename": {
          "type": "string"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "gist_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id"
    },
    "updateComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "gist_id": {
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        }
      },
      "url": "/gists/:gist_id/comments/:comment_id"
    }
  },
  "gitdata": {
    "createBlob": {
      "method": "POST",
      "params": {
        "content": {
          "required": true,
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/blobs"
    },
    "createCommit": {
      "method": "POST",
      "params": {
        "author": {
          "type": "object"
        },
        "committer": {
          "type": "object"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "parents": {
          "required": true,
          "type": "string[]"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tree": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/commits"
    },
    "createRef": {
      "method": "POST",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs"
    },
    "createReference": {
      "alias": "gitdata.createRef",
      "deprecated": "`gitdata.createReference()` is deprecated, use `gitdata.createRef()`"
    },
    "createTag": {
      "method": "POST",
      "params": {
        "message": {
          "required": true,
          "type": "string"
        },
        "object": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag": {
          "required": true,
          "type": "string"
        },
        "tagger": {
          "type": "object"
        },
        "tagger.date": {
          "type": "string"
        },
        "tagger.email": {
          "type": "string"
        },
        "tagger.name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "commit",
            "tree",
            "blob"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/tags"
    },
    "createTree": {
      "method": "POST",
      "params": {
        "base_tree": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tree": {
          "required": true,
          "type": "object[]"
        },
        "tree[].content": {
          "type": "string"
        },
        "tree[].mode": {
          "enum": [
            "100644",
            "100755",
            "040000",
            "160000",
            "120000"
          ],
          "type": "string"
        },
        "tree[].path": {
          "type": "string"
        },
        "tree[].sha": {
          "type": "string"
        },
        "tree[].type": {
          "enum": [
            "blob",
            "tree",
            "commit"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/trees"
    },
    "deleteRef": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    },
    "deleteReference": {
      "alias": "gitdata.deleteRef",
      "deprecated": "`gitdata.deleteReference()` is deprecated, use `gitdata.deleteRef()`"
    },
    "getBlob": {
      "method": "GET",
      "params": {
        "file_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "alias": "file_sha",
          "deprecated": true
        }
      },
      "url": "/repos/:owner/:repo/git/blobs/:file_sha"
    },
    "getCommit": {
      "method": "GET",
      "params": {
        "commit_sha": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "alias": "commit_sha",
          "deprecated": true
        }
      },
      "url": "/repos/:owner/:repo/git/commits/:commit_sha"
    },
    "getCommitSignatureVerification": {
      "alias": "gitdata.getCommit",
      "deprecated": "`gitdata.getCommitSignatureVerification()` is deprecated, use `gitdata.getCommit()`",
      "params": {}
    },
    "getRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    },
    "getReference": {
      "alias": "gitdata.getRef",
      "deprecated": "`gitdata.getReference()` is deprecated, use `gitdata.getRef()`"
    },
    "getReferences": {
      "alias": "gitdata.listRefs",
      "deprecated": "`gitdata.getReferences()` is deprecated, use `gitdata.listRefs()`"
    },
    "getTag": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "alias": "tag_sha",
          "deprecated": true
        },
        "tag_sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/tags/:tag_sha"
    },
    "getTagSignatureVerification": {
      "alias": "gitdata.getTag",
      "deprecated": "`gitdata.getTagSignatureVerification()` is deprecated, use `gitdata.getTag()`",
      "params": {}
    },
    "getTags": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/tags"
    },
    "getTree": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "recursive": {
          "enum": [
            1
          ],
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "alias": "tree_sha",
          "deprecated": true
        },
        "tree_sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/trees/:tree_sha"
    },
    "listRefs": {
      "method": "GET",
      "params": {
        "namespace": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:namespace"
    },
    "updateRef": {
      "method": "PATCH",
      "params": {
        "force": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/git/refs/:ref"
    },
    "updateReference": {
      "alias": "gitdata.updateRef",
      "deprecated": "`gitdata.updateReference()` is deprecated, use `gitdata.updateRef()`"
    }
  },
  "gitignore": {
    "getTemplate": {
      "method": "GET",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/gitignore/templates/:name"
    },
    "listTemplates": {
      "method": "GET",
      "params": {},
      "url": "/gitignore/templates"
    }
  },
  "integrations": {
    "addRepoToInstallation": {
      "alias": "apps.addRepoToInstallation",
      "deprecated": "`integrations.addRepoToInstallation()` is deprecated, use `apps.addRepoToInstallation()`",
      "params": {}
    },
    "createInstallationToken": {
      "alias": "apps.createInstallationToken",
      "deprecated": "`integrations.createInstallationToken()` is deprecated, use `apps.createInstallationToken()`",
      "params": {}
    },
    "getInstallationRepositories": {
      "alias": "apps.listRepos",
      "deprecated": "`integrations.getInstallationRepositories()` is deprecated, use `apps.listRepos()`",
      "params": {}
    },
    "getInstallations": {
      "alias": "apps.listInstallations",
      "deprecated": "`integrations.getInstallations()` is deprecated, use `apps.listInstallations()`",
      "params": {}
    },
    "removeRepoFromInstallation": {
      "alias": "apps.removeRepoFromInstallation",
      "deprecated": "`integrations.removeRepoFromInstallation()` is deprecated, use `apps.removeRepoFromInstallation()`",
      "params": {}
    }
  },
  "issues": {
    "addAssignees": {
      "method": "POST",
      "params": {
        "assignees": {
          "type": "string[]"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/assignees"
    },
    "addAssigneesToIssue": {
      "alias": "issues.addAssignees",
      "deprecated": "`issues.addAssigneesToIssue()` is deprecated, use `issues.addAssignees()`"
    },
    "addLabels": {
      "method": "POST",
      "params": {
        "labels": {
          "required": true,
          "type": "string[]",
          "mapTo": "data"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "checkAssignee": {
      "method": "GET",
      "params": {
        "assignee": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/assignees/:assignee"
    },
    "create": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "assignee": {
          "type": "string"
        },
        "assignees": {
          "type": "string[]"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "type": "string[]"
        },
        "milestone": {
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues"
    },
    "createComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/comments"
    },
    "createLabel": {
      "method": "POST",
      "params": {
        "color": {
          "required": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels"
    },
    "createMilestone": {
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones"
    },
    "deleteComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "deleteLabel": {
      "method": "DELETE",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:name"
    },
    "deleteMilestone": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    },
    "edit": {
      "alias": "issues.update",
      "deprecated": "`issues.edit()` is deprecated, use `issues.update()`"
    },
    "editComment": {
      "alias": "issues.updateComment",
      "deprecated": "`issues.editComment()` is deprecated, use `issues.updateComment()`"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number"
    },
    "getAll": {
      "alias": "issues.list",
      "deprecated": "`issues.getAll()` is deprecated, use `issues.list()`"
    },
    "getAssignees": {
      "alias": "issues.listAssignees",
      "deprecated": "`issues.getAssignees()` is deprecated, use `issues.listAssignees()`"
    },
    "getComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "getComments": {
      "alias": "issues.listComments",
      "deprecated": "`issues.getComments()` is deprecated, use `issues.listComments()`"
    },
    "getCommentsForRepo": {
      "alias": "issues.listCommentsForRepo",
      "deprecated": "`issues.getCommentsForRepo()` is deprecated, use `issues.listCommentsForRepo()`"
    },
    "getEvent": {
      "method": "GET",
      "params": {
        "event_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "event_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/events/:event_id"
    },
    "getEvents": {
      "alias": "issues.listEvents",
      "deprecated": "`issues.getEvents()` is deprecated, use `issues.listEvents()`"
    },
    "getEventsForRepo": {
      "alias": "issues.listEventsForRepo",
      "deprecated": "`issues.getEventsForRepo()` is deprecated, use `issues.listEventsForRepo()`"
    },
    "getEventsTimeline": {
      "alias": "issues.listEventsForTimeline",
      "deprecated": "`issues.getEventsTimeline()` is deprecated, use `issues.listEventsForTimeline()`"
    },
    "getForOrg": {
      "alias": "issues.listForOrg",
      "deprecated": "`issues.getForOrg()` is deprecated, use `issues.listForOrg()`"
    },
    "getForRepo": {
      "alias": "issues.listForRepo",
      "deprecated": "`issues.getForRepo()` is deprecated, use `issues.listForRepo()`"
    },
    "getForUser": {
      "alias": "issues.listForAuthenticatedUser",
      "deprecated": "`issues.getForUser()` is deprecated, use `issues.listForAuthenticatedUser()`"
    },
    "getIssueLabels": {
      "alias": "issues.listLabelsOnIssue",
      "deprecated": "`issues.getIssueLabels()` is deprecated, use `issues.listLabelsOnIssue()`"
    },
    "getLabel": {
      "method": "GET",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:name"
    },
    "getLabels": {
      "alias": "issues.listLabelsForRepo",
      "deprecated": "`issues.getLabels()` is deprecated, use `issues.listLabelsForRepo()`"
    },
    "getMilestone": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    },
    "getMilestoneLabels": {
      "alias": "issues.listLabelsForMilestone",
      "deprecated": "`issues.getMilestoneLabels()` is deprecated, use `issues.listLabelsForMilestone()`"
    },
    "getMilestones": {
      "alias": "issues.listMilestonesForRepo",
      "deprecated": "`issues.getMilestones()` is deprecated, use `issues.listMilestonesForRepo()`"
    },
    "list": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/issues"
    },
    "listAssignees": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/assignees"
    },
    "listComments": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/comments"
    },
    "listCommentsForRepo": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments"
    },
    "listEvents": {
      "method": "GET",
      "params": {
        "issue_number": {
          "alias": "number",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/events"
    },
    "listEventsForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/events"
    },
    "listEventsForTimeline": {
      "headers": {
        "accept": "application/vnd.github.mockingbird-preview+json"
      },
      "method": "GET",
      "params": {
        "issue_number": {
          "alias": "number",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/timeline"
    },
    "listForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/user/issues"
    },
    "listForOrg": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "filter": {
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/issues"
    },
    "listForRepo": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "assignee": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "mentioned": {
          "type": "string"
        },
        "milestone": {
          "type": "string",
          "validation": "^([0-9]+|none|\\*)$"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues"
    },
    "listLabelsForMilestone": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number/labels"
    },
    "listLabelsForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels"
    },
    "listLabelsOnIssue": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "listMilestonesForRepo": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "due_on",
            "completeness"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones"
    },
    "lock": {
      "method": "PUT",
      "params": {
        "lock_reason": {
          "enum": [
            "off-topic",
            "too heated",
            "resolved",
            "spam"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/lock"
    },
    "removeAllLabels": {
      "alias": "issues.removeLabels",
      "deprecated": "`issues.removeAllLabels()` is deprecated, use `issues.removeLabels()`"
    },
    "removeAssignees": {
      "method": "DELETE",
      "params": {
        "assignees": {
          "type": "string[]"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/assignees"
    },
    "removeAssigneesFromIssue": {
      "alias": "issues.removeAssignees",
      "deprecated": "`issues.removeAssigneesFromIssue()` is deprecated, use `issues.removeAssignees()`"
    },
    "removeLabel": {
      "method": "DELETE",
      "params": {
        "name": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels/:name"
    },
    "removeLabels": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "replaceAllLabels": {
      "alias": "issues.replaceLabels",
      "deprecated": "`issues.replaceAllLabels()` is deprecated, use `issues.replaceLabels()`"
    },
    "replaceLabels": {
      "method": "PUT",
      "params": {
        "labels": {
          "type": "string[]"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/labels"
    },
    "unlock": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/lock"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "PATCH",
      "params": {
        "assignee": {
          "type": "string"
        },
        "assignees": {
          "type": "string[]"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "type": "string[]"
        },
        "milestone": {
          "allowNull": true,
          "type": "integer"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number"
    },
    "updateComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    "updateLabel": {
      "method": "PATCH",
      "params": {
        "color": {
          "type": "string"
        },
        "current_name": {
          "required": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "oldname": {
          "alias": "current_name",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/labels/:current_name"
    },
    "updateMilestone": {
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/milestones/:number"
    }
  },
  "licenses": {
    "get": {
      "method": "GET",
      "params": {
        "license": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/licenses/:license"
    },
    "getForRepo": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/license"
    },
    "list": {
      "method": "GET",
      "params": {},
      "url": "/licenses"
    }
  },
  "markdown": {
    "render": {
      "method": "POST",
      "params": {
        "context": {
          "type": "string"
        },
        "mode": {
          "enum": [
            "markdown",
            "gfm"
          ],
          "type": "string"
        },
        "text": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/markdown"
    },
    "renderRaw": {
      "headers": {
        "content-type": "text/plain; charset=utf-8"
      },
      "method": "POST",
      "params": {
        "data": {
          "mapTo": "data",
          "required": true,
          "type": "string"
        }
      },
      "url": "/markdown/raw"
    }
  },
  "meta": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/meta"
    }
  },
  "migrations": {
    "cancelImport": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import"
    },
    "deleteArchiveForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "DELETE",
      "params": {
        "migration_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/migrations/:migration_id/archive"
    },
    "deleteArchiveForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "migration_id",
          "deprecated": true
        },
        "migration_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/migrations/:migration_id/archive"
    },
    "deleteMigrationArchive": {
      "alias": "migrations.deleteArchiveForOrg",
      "deprecated": "`migrations.deleteMigrationArchive()` is deprecated, use `migrations.deleteArchiveForOrg()`"
    },
    "getArchiveForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "migration_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/migrations/:migration_id/archive"
    },
    "getArchiveForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "migration_id",
          "deprecated": true
        },
        "migration_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/migrations/:migration_id/archive"
    },
    "getCommitAuthors": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import/authors"
    },
    "getImportCommitAuthors": {
      "alias": "migrations.getCommitAuthors",
      "deprecated": "`migrations.getImportCommitAuthors()` is deprecated, use `migrations.getCommitAuthors()`"
    },
    "getImportProgress": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import"
    },
    "getLargeFiles": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "GET",
      "params": {
        "name": {
          "alias": "repo",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import/large_files"
    },
    "getLargeImportFiles": {
      "alias": "migrations.getLargeFiles",
      "deprecated": "`migrations.getLargeImportFiles()` is deprecated, use `migrations.getLargeFiles()`"
    },
    "getMigrationArchiveLink": {
      "alias": "migrations.getArchiveForOrg",
      "deprecated": "`migrations.getMigrationArchiveLink()` is deprecated, use `migrations.getArchiveForOrg()`"
    },
    "getMigrationStatus": {
      "alias": "migrations.getStatusForOrg",
      "deprecated": "`migrations.getMigrationStatus()` is deprecated, use `migrations.getStatusForOrg()`"
    },
    "getMigrations": {
      "alias": "migrations.listForOrg",
      "deprecated": "`migrations.getMigrations()` is deprecated, use `migrations.listForOrg()`"
    },
    "getStatusForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "migration_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/migrations/:migration_id"
    },
    "getStatusForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "migration_id",
          "deprecated": true
        },
        "migration_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/migrations/:migration_id"
    },
    "listForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/migrations"
    },
    "listForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/migrations"
    },
    "mapCommitAuthor": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "PATCH",
      "params": {
        "author_id": {
          "required": true,
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import/authors/:author_id"
    },
    "mapImportCommitAuthor": {
      "alias": "migrations.mapCommitAuthor",
      "deprecated": "`migrations.mapImportCommitAuthor()` is deprecated, use `migrations.mapCommitAuthor()`"
    },
    "setImportLfsPreference": {
      "alias": "migrations.setLfsPreference",
      "deprecated": "`migrations.setImportLfsPreference()` is deprecated, use `migrations.setLfsPreference()`"
    },
    "setLfsPreference": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "PATCH",
      "params": {
        "name": {
          "alias": "repo",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "use_lfs": {
          "enum": [
            "opt_in",
            "opt_out"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import/lfs"
    },
    "startForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "POST",
      "params": {
        "exclude_attachments": {
          "type": "boolean"
        },
        "lock_repositories": {
          "type": "boolean"
        },
        "repositories": {
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/user/migrations"
    },
    "startForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "POST",
      "params": {
        "exclude_attachments": {
          "type": "boolean"
        },
        "lock_repositories": {
          "type": "boolean"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "repositories": {
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/orgs/:org/migrations"
    },
    "startImport": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tfvc_project": {
          "type": "string"
        },
        "vcs": {
          "enum": [
            "subversion",
            "git",
            "mercurial",
            "tfvc"
          ],
          "type": "string"
        },
        "vcs_password": {
          "type": "string"
        },
        "vcs_url": {
          "required": true,
          "type": "string"
        },
        "vcs_username": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import"
    },
    "startMigration": {
      "alias": "migrations.startForOrg",
      "deprecated": "`migrations.startMigration()` is deprecated, use `migrations.startForOrg()`"
    },
    "unlockRepoForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "DELETE",
      "params": {
        "migration_id": {
          "required": true,
          "type": "integer"
        },
        "repo_name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/migrations/:migration_id/repos/:repo_name/lock"
    },
    "unlockRepoForOrg": {
      "headers": {
        "accept": "application/vnd.github.wyandotte-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "migration_id",
          "deprecated": true
        },
        "migration_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "repo_name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/migrations/:migration_id/repos/:repo_name/lock"
    },
    "unlockRepoLockedForMigration": {
      "alias": "migrations.unlockRepoForOrg",
      "deprecated": "`migrations.unlockRepoLockedForMigration()` is deprecated, use `migrations.unlockRepoForOrg()`"
    },
    "updateImport": {
      "headers": {
        "accept": "application/vnd.github.barred-rock-preview+json"
      },
      "method": "PATCH",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "vcs_password": {
          "type": "string"
        },
        "vcs_username": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/import"
    }
  },
  "misc": {
    "getCodeOfConduct": {
      "alias": "codesOfConduct.getConductCode",
      "deprecated": "`misc.getCodeOfConduct()` is deprecated, use `codesOfConduct.getConductCode()`"
    },
    "getCodesOfConduct": {
      "alias": "codesOfConduct.listConductCodes",
      "deprecated": "`misc.getCodesOfConduct()` is deprecated, use `codesOfConduct.listConductCodes()`"
    },
    "getEmojis": {
      "alias": "emojis.get",
      "deprecated": "`misc.getEmojis()` is deprecated, use `emojis.get()`",
      "params": {}
    },
    "getGitignoreTemplate": {
      "alias": "gitignore.getTemplate",
      "deprecated": "`misc.getGitignoreTemplate()` is deprecated, use `gitignore.getTemplate()`"
    },
    "getGitignoreTemplates": {
      "alias": "gitignore.listTemplates",
      "deprecated": "`misc.getGitignoreTemplates()` is deprecated, use `gitignore.listTemplates()`"
    },
    "getLicense": {
      "alias": "licenses.get",
      "deprecated": "`misc.getLicense()` is deprecated, use `licenses.get()`"
    },
    "getLicenses": {
      "alias": "licenses.list",
      "deprecated": "`misc.getLicenses()` is deprecated, use `licenses.list()`"
    },
    "getMeta": {
      "alias": "meta.get",
      "deprecated": "`misc.getMeta()` is deprecated, use `meta.get()`",
      "params": {}
    },
    "getRateLimit": {
      "alias": "rateLimit.get",
      "deprecated": "`misc.getRateLimit()` is deprecated, use `rateLimit.get()`"
    },
    "getRepoCodeOfConduct": {
      "alias": "codesOfConduct.getForRepo",
      "deprecated": "`misc.getRepoCodeOfConduct()` is deprecated, use `codesOfConduct.getForRepo()`"
    },
    "getRepoLicense": {
      "alias": "licenses.getForRepo",
      "deprecated": "`misc.getRepoLicense()` is deprecated, use `licenses.getForRepo()`"
    },
    "renderMarkdown": {
      "alias": "markdown.render",
      "deprecated": "`misc.renderMarkdown()` is deprecated, use `markdown.render()`"
    },
    "renderMarkdownRaw": {
      "alias": "markdown.renderRaw",
      "deprecated": "`misc.renderMarkdownRaw()` is deprecated, use `markdown.renderRaw()`"
    }
  },
  "orgs": {
    "addOrUpdateMembership": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "member"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "addOrgMembership": {
      "alias": "orgs.addOrUpdateMembership",
      "deprecated": "`orgs.addOrgMembership()` is deprecated, use `orgs.addOrUpdateMembership()`"
    },
    "addTeamMembership": {
      "alias": "teams.addOrUpdateMembership",
      "deprecated": "`orgs.addTeamMembership()` is deprecated, use `teams.addOrUpdateMembership()`"
    },
    "addTeamRepo": {
      "alias": "teams.addOrUpdateRepo",
      "deprecated": "`orgs.addTeamRepo()` is deprecated, use `teams.addOrUpdateRepo()`"
    },
    "blockUser": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/blocks/:username"
    },
    "checkBlockedUser": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/blocks/:username"
    },
    "checkMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/members/:username"
    },
    "checkPublicMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "checkTeamRepo": {
      "alias": "teams.checkManagesRepo",
      "deprecated": "`orgs.checkTeamRepo()` is deprecated, use `teams.checkManagesRepo()`"
    },
    "concealMembership": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "convertMemberToOutsideCollaborator": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/outside_collaborators/:username"
    },
    "createHook": {
      "method": "POST",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "required": true,
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks"
    },
    "createInvitation": {
      "headers": {
        "accept": "application/vnd.github.dazzler-preview+json"
      },
      "method": "POST",
      "params": {
        "email": {
          "type": "string"
        },
        "invitee_id": {
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "direct_member",
            "billing_manager"
          ],
          "type": "string"
        },
        "team_ids": {
          "type": "integer[]"
        }
      },
      "url": "/orgs/:org/invitations"
    },
    "createTeam": {
      "alias": "teams.create",
      "deprecated": "`orgs.createTeam()` is deprecated, use `teams.create()`"
    },
    "deleteHook": {
      "method": "DELETE",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "deleteTeam": {
      "alias": "teams.delete",
      "deprecated": "`orgs.deleteTeam()` is deprecated, use `teams.delete()`"
    },
    "deleteTeamRepo": {
      "alias": "teams.removeRepo",
      "deprecated": "`orgs.deleteTeamRepo()` is deprecated, use `teams.removeRepo()`"
    },
    "editHook": {
      "alias": "orgs.updateHook",
      "deprecated": "`orgs.editHook()` is deprecated, use `orgs.updateHook()`"
    },
    "editTeam": {
      "alias": "teams.update",
      "deprecated": "`orgs.editTeam()` is deprecated, use `teams.update()`"
    },
    "get": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org"
    },
    "getAll": {
      "alias": "orgs.list",
      "deprecated": "`orgs.getAll()` is deprecated, use `orgs.list()`"
    },
    "getBlockedUsers": {
      "alias": "orgs.listBlockedUsers",
      "deprecated": "`orgs.getBlockedUsers()` is deprecated, use `orgs.listBlockedUsers()`"
    },
    "getChildTeams": {
      "alias": "teams.listChild",
      "deprecated": "`orgs.getChildTeams()` is deprecated, use `teams.listChild()`"
    },
    "getForUser": {
      "alias": "orgs.listForUser",
      "deprecated": "`orgs.getForUser()` is deprecated, use `orgs.listForUser()`"
    },
    "getHook": {
      "method": "GET",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "getHooks": {
      "alias": "orgs.listHooks",
      "deprecated": "`orgs.getHooks()` is deprecated, use `orgs.listHooks()`"
    },
    "getInvitationTeams": {
      "alias": "orgs.listInvitationTeams",
      "deprecated": "`orgs.getInvitationTeams()` is deprecated, use `orgs.listInvitationTeams()`"
    },
    "getMembers": {
      "alias": "orgs.listMembers",
      "deprecated": "`orgs.getMembers()` is deprecated, use `orgs.listMembers()`"
    },
    "getMembership": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "getMembershipForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs/:org"
    },
    "getOrgMembership": {
      "alias": "orgs.getMembership",
      "deprecated": "`orgs.getOrgMembership()` is deprecated, use `orgs.getMembership()`"
    },
    "getOutsideCollaborators": {
      "alias": "orgs.listOutsideCollaborators",
      "deprecated": "`orgs.getOutsideCollaborators()` is deprecated, use `orgs.listOutsideCollaborators()`"
    },
    "getPendingOrgInvites": {
      "alias": "orgs.listPendingInvitations",
      "deprecated": "`orgs.getPendingOrgInvites()` is deprecated, use `orgs.listPendingInvitations()`"
    },
    "getPendingTeamInvites": {
      "alias": "teams.listPendingInvitations",
      "deprecated": "`orgs.getPendingTeamInvites()` is deprecated, use `teams.listPendingInvitations()`"
    },
    "getPublicMembers": {
      "alias": "orgs.listPublicMembers",
      "deprecated": "`orgs.getPublicMembers()` is deprecated, use `orgs.listPublicMembers()`"
    },
    "getTeam": {
      "alias": "teams.get",
      "deprecated": "`orgs.getTeam()` is deprecated, use `teams.get()`"
    },
    "getTeamMembers": {
      "alias": "teams.listMembers",
      "deprecated": "`orgs.getTeamMembers()` is deprecated, use `teams.listMembers()`"
    },
    "getTeamMembership": {
      "alias": "teams.getMembership",
      "deprecated": "`orgs.getTeamMembership()` is deprecated, use `teams.getMembership()`"
    },
    "getTeamRepos": {
      "alias": "teams.listRepos",
      "deprecated": "`orgs.getTeamRepos()` is deprecated, use `teams.listRepos()`"
    },
    "getTeams": {
      "alias": "teams.list",
      "deprecated": "`orgs.getTeams()` is deprecated, use `teams.list()`"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/organizations"
    },
    "listBlockedUsers": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/blocks"
    },
    "listForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/orgs"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/orgs"
    },
    "listHooks": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/hooks"
    },
    "listInvitationTeams": {
      "method": "GET",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/invitations/:invitation_id/teams"
    },
    "listMembers": {
      "method": "GET",
      "params": {
        "filter": {
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "role": {
          "enum": [
            "all",
            "admin",
            "member"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/members"
    },
    "listMemberships": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "active",
            "pending"
          ],
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs"
    },
    "listOutsideCollaborators": {
      "method": "GET",
      "params": {
        "filter": {
          "enum": [
            "2fa_disabled",
            "all"
          ],
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/outside_collaborators"
    },
    "listPendingInvitations": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/invitations"
    },
    "listPublicMembers": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/public_members"
    },
    "pingHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id/pings"
    },
    "publicizeMembership": {
      "method": "PUT",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/public_members/:username"
    },
    "removeMember": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/members/:username"
    },
    "removeMembership": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/memberships/:username"
    },
    "removeOrgMembership": {
      "alias": "orgs.removeMembership",
      "deprecated": "`orgs.removeOrgMembership()` is deprecated, use `orgs.removeMembership()`"
    },
    "removeOutsideCollaborator": {
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/outside_collaborators/:username"
    },
    "removeTeamMembership": {
      "alias": "teams.removeMembership",
      "deprecated": "`orgs.removeTeamMembership()` is deprecated, use `teams.removeMembership()`"
    },
    "unblockUser": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "DELETE",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/blocks/:username"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "billing_email": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "default_repository_permission": {
          "enum": [
            "read",
            "write",
            "admin",
            "none"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "has_organization_projects": {
          "type": "boolean"
        },
        "has_repository_projects": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "members_can_create_repositories": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org"
    },
    "updateHook": {
      "method": "PATCH",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "org": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/orgs/:org/hooks/:hook_id"
    },
    "updateMembership": {
      "method": "PATCH",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "active"
          ],
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/memberships/orgs/:org"
    }
  },
  "projects": {
    "addCollaborator": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PUT",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "permission": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username"
    },
    "createCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "content_id": {
          "type": "integer"
        },
        "content_type": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "url": "/projects/columns/:column_id/cards"
    },
    "createColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/columns"
    },
    "createForOrg": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/projects"
    },
    "createForRepo": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/projects"
    },
    "createOrgProject": {
      "alias": "projects.createForOrg",
      "deprecated": "`projects.createOrgProject()` is deprecated, use `projects.createForOrg()`"
    },
    "createProjectCard": {
      "alias": "projects.createCard",
      "deprecated": "`projects.createProjectCard()` is deprecated, use `projects.createCard()`"
    },
    "createProjectColumn": {
      "alias": "projects.createColumn",
      "deprecated": "`projects.createProjectColumn()` is deprecated, use `projects.createColumn()`"
    },
    "createRepoProject": {
      "alias": "projects.createForRepo",
      "deprecated": "`projects.createRepoProject()` is deprecated, use `projects.createForRepo()`"
    },
    "delete": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id"
    },
    "deleteCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "card_id",
          "deprecated": true
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "deleteColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "column_id",
          "deprecated": true
        }
      },
      "url": "/projects/columns/:column_id"
    },
    "deleteProject": {
      "alias": "projects.delete",
      "deprecated": "`projects.deleteProject()` is deprecated, use `projects.delete()`"
    },
    "deleteProjectCard": {
      "alias": "projects.deleteCard",
      "deprecated": "`projects.deleteProjectCard()` is deprecated, use `projects.deleteCard()`"
    },
    "deleteProjectColumn": {
      "alias": "projects.deleteColumn",
      "deprecated": "`projects.deleteProjectColumn()` is deprecated, use `projects.deleteColumn()`"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id"
    },
    "getCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "card_id",
          "deprecated": true
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "getCollaborators": {
      "alias": "projects.listCollaborators",
      "deprecated": "`projects.getCollaborators()` is deprecated, use `projects.listCollaborators()`"
    },
    "getColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "column_id",
          "deprecated": true
        }
      },
      "url": "/projects/columns/:column_id"
    },
    "getOrgProjects": {
      "alias": "projects.listForOrg",
      "deprecated": "`projects.getOrgProjects()` is deprecated, use `projects.listForOrg()`"
    },
    "getProject": {
      "alias": "projects.get",
      "deprecated": "`projects.getProject()` is deprecated, use `projects.get()`"
    },
    "getProjectCard": {
      "alias": "projects.getCard",
      "deprecated": "`projects.getProjectCard()` is deprecated, use `projects.getCard()`"
    },
    "getProjectCards": {
      "alias": "projects.listCards",
      "deprecated": "`projects.getProjectCards()` is deprecated, use `projects.listCards()`"
    },
    "getProjectColumn": {
      "alias": "projects.getColumn",
      "deprecated": "`projects.getProjectColumn()` is deprecated, use `projects.getColumn()`"
    },
    "getProjectColumns": {
      "alias": "projects.listColumns",
      "deprecated": "`projects.getProjectColumns()` is deprecated, use `projects.listColumns()`"
    },
    "getRepoProjects": {
      "alias": "projects.listForRepo",
      "deprecated": "`projects.getRepoProjects()` is deprecated, use `projects.listForRepo()`"
    },
    "getUserPermissionLevel": {
      "alias": "projects.reviewUserPermissionLevel",
      "deprecated": "`projects.getUserPermissionLevel()` is deprecated, use `projects.reviewUserPermissionLevel()`"
    },
    "listCards": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "archived_state": {
          "enum": [
            "all",
            "archived",
            "not_archived"
          ],
          "type": "string"
        },
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/projects/columns/:column_id/cards"
    },
    "listCollaborators": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "type": "string"
        },
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/collaborators"
    },
    "listColumns": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/projects/:project_id/columns"
    },
    "listForOrg": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/projects"
    },
    "listForRepo": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/projects"
    },
    "moveCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "column_id": {
          "type": "integer"
        },
        "id": {
          "alias": "card_id",
          "deprecated": true
        },
        "position": {
          "required": true,
          "type": "string",
          "validation": "^(top|bottom|after:\\d+)$"
        }
      },
      "url": "/projects/columns/cards/:card_id/moves"
    },
    "moveColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "POST",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "column_id",
          "deprecated": true
        },
        "position": {
          "required": true,
          "type": "string",
          "validation": "^(first|last|after:\\d+)$"
        }
      },
      "url": "/projects/columns/:column_id/moves"
    },
    "moveProjectCard": {
      "alias": "projects.moveCard",
      "deprecated": "`projects.moveProjectCard()` is deprecated, use `projects.moveCard()`"
    },
    "moveProjectColumn": {
      "alias": "projects.moveColumn",
      "deprecated": "`projects.moveProjectColumn()` is deprecated, use `projects.moveColumn()`"
    },
    "removeCollaborator": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username"
    },
    "reviewUserPermissionLevel": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/:project_id/collaborators/:username/permission"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "id": {
          "alias": "project_id",
          "deprecated": true
        },
        "name": {
          "type": "string"
        },
        "organization_permission": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "public": {
          "type": "boolean"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        }
      },
      "url": "/projects/:project_id"
    },
    "updateCard": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "archived": {
          "type": "boolean"
        },
        "card_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "card_id",
          "deprecated": true
        },
        "note": {
          "type": "string"
        }
      },
      "url": "/projects/columns/cards/:card_id"
    },
    "updateColumn": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PATCH",
      "params": {
        "column_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "column_id",
          "deprecated": true
        },
        "name": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/projects/columns/:column_id"
    },
    "updateProject": {
      "alias": "projects.update",
      "deprecated": "`projects.updateProject()` is deprecated, use `projects.update()`"
    },
    "updateProjectCard": {
      "alias": "projects.updateCard",
      "deprecated": "`projects.updateProjectCard()` is deprecated, use `projects.updateCard()`"
    },
    "updateProjectColumn": {
      "alias": "projects.updateColumn",
      "deprecated": "`projects.updateProjectColumn()` is deprecated, use `projects.updateColumn()`"
    }
  },
  "pullRequests": {
    "checkIfMerged": {
      "headers": {
        "accept": "application/vnd.github.polaris-preview"
      },
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/merge"
    },
    "checkMerged": {
      "alias": "pullRequests.checkIfMerged",
      "deprecated": "`pullRequests.checkMerged()` is deprecated, use `pullRequests.checkIfMerged()`"
    },
    "create": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "createComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "commit_id": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "position": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "createCommentReply": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "in_reply_to": {
          "required": true,
          "type": "integer"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "createFromIssue": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "issue": {
          "required": true,
          "type": "integer"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "createReview": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "comments": {
          "type": "object[]"
        },
        "comments[].body": {
          "required": true,
          "type": "string"
        },
        "comments[].path": {
          "required": true,
          "type": "string"
        },
        "comments[].position": {
          "required": true,
          "type": "integer"
        },
        "commit_id": {
          "type": "string"
        },
        "event": {
          "enum": [
            "APPROVE",
            "REQUEST_CHANGES",
            "COMMENT"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews"
    },
    "createReviewRequest": {
      "method": "POST",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "reviewers": {
          "type": "string[]"
        },
        "team_reviewers": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "deleteComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    "deletePendingReview": {
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "review_id",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id"
    },
    "deleteReviewRequest": {
      "method": "DELETE",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "reviewers": {
          "type": "string[]"
        },
        "team_reviewers": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "dismissReview": {
      "method": "PUT",
      "params": {
        "id": {
          "alias": "review_id",
          "deprecated": true
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/dismissals"
    },
    "editComment": {
      "alias": "pullRequests.updateComment",
      "deprecated": "`pullRequests.editComment()` is deprecated, use `pullRequests.updateComment()`"
    },
    "get": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number"
    },
    "getAll": {
      "alias": "pullRequests.list",
      "deprecated": "`pullRequests.getAll()` is deprecated, use `pullRequests.list()`"
    },
    "getComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    "getComments": {
      "alias": "pullRequests.listComments",
      "deprecated": "`pullRequests.getComments()` is deprecated, use `pullRequests.listComments()`"
    },
    "getCommentsForRepo": {
      "alias": "pullRequests.listCommentsForRepo",
      "deprecated": "`pullRequests.getCommentsForRepo()` is deprecated, use `pullRequests.listCommentsForRepo()`"
    },
    "getCommentsForReview": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "review_id",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/comments"
    },
    "getCommits": {
      "alias": "pullRequests.listCommits",
      "deprecated": "`pullRequests.getCommits()` is deprecated, use `pullRequests.listCommits()`"
    },
    "getFiles": {
      "alias": "pullRequests.listFiles",
      "deprecated": "`pullRequests.getFiles()` is deprecated, use `pullRequests.listFiles()`"
    },
    "getReview": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "review_id",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id"
    },
    "getReviewComments": {
      "alias": "pullRequests.getCommentsForReview",
      "deprecated": "`pullRequests.getReviewComments()` is deprecated, use `pullRequests.getCommentsForReview()`"
    },
    "getReviewRequests": {
      "alias": "pullRequests.listReviewRequests",
      "deprecated": "`pullRequests.getReviewRequests()` is deprecated, use `pullRequests.listReviewRequests()`"
    },
    "getReviews": {
      "alias": "pullRequests.listReviews",
      "deprecated": "`pullRequests.getReviews()` is deprecated, use `pullRequests.listReviews()`"
    },
    "list": {
      "method": "GET",
      "params": {
        "base": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "head": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls"
    },
    "listComments": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/comments"
    },
    "listCommentsForRepo": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/commits"
    },
    "listFiles": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/files"
    },
    "listReviewRequests": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/requested_reviewers"
    },
    "listReviews": {
      "method": "GET",
      "params": {
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews"
    },
    "merge": {
      "headers": {
        "accept": "application/vnd.github.polaris-preview"
      },
      "method": "PUT",
      "params": {
        "commit_message": {
          "type": "string"
        },
        "commit_title": {
          "type": "string"
        },
        "merge_method": {
          "enum": [
            "merge",
            "squash",
            "rebase"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/merge"
    },
    "submitReview": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "event": {
          "enum": [
            "APPROVE",
            "REQUEST_CHANGES",
            "COMMENT"
          ],
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "review_id",
          "deprecated": true
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "review_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number/reviews/:review_id/events"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "base": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "maintainer_can_modify": {
          "type": "boolean"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/:number"
    },
    "updateComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id"
    }
  },
  "rateLimit": {
    "get": {
      "method": "GET",
      "params": {},
      "url": "/rate_limit"
    }
  },
  "reactions": {
    "createForCommitComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    "createForIssue": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/reactions"
    },
    "createForIssueComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    "createForPullRequestReviewComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    "createForTeamDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    "createForTeamDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "POST",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    "delete": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "reaction_id",
          "deprecated": true
        },
        "reaction_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/reactions/:reaction_id"
    },
    "getForCommitComment": {
      "alias": "reactions.listForCommitComment",
      "deprecated": "`reactions.getForCommitComment()` is deprecated, use `reactions.listForCommitComment()`"
    },
    "getForIssue": {
      "alias": "reactions.listForIssue",
      "deprecated": "`reactions.getForIssue()` is deprecated, use `reactions.listForIssue()`"
    },
    "getForIssueComment": {
      "alias": "reactions.listForIssueComment",
      "deprecated": "`reactions.getForIssueComment()` is deprecated, use `reactions.listForIssueComment()`"
    },
    "getForPullRequestReviewComment": {
      "alias": "reactions.listForPullRequestReviewComment",
      "deprecated": "`reactions.getForPullRequestReviewComment()` is deprecated, use `reactions.listForPullRequestReviewComment()`"
    },
    "getForTeamDiscussion": {
      "alias": "reactions.listForTeamDiscussion",
      "deprecated": "`reactions.getForTeamDiscussion()` is deprecated, use `reactions.listForTeamDiscussion()`"
    },
    "getForTeamDiscussionComment": {
      "alias": "reactions.listForTeamDiscussionComment",
      "deprecated": "`reactions.getForTeamDiscussionComment()` is deprecated, use `reactions.listForTeamDiscussionComment()`"
    },
    "listForCommitComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    "listForIssue": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "number": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/:number/reactions"
    },
    "listForIssueComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    "listForPullRequestReviewComment": {
      "headers": {
        "accept": "application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    "listForTeamDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    "listForTeamDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "content": {
          "enum": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    }
  },
  "repos": {
    "acceptInvitation": {
      "method": "PATCH",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations/:invitation_id"
    },
    "addCollaborator": {
      "method": "PUT",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "addDeployKey": {
      "method": "POST",
      "params": {
        "key": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "read_only": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys"
    },
    "addProtectedBranchAdminEnforcement": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "addProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "addProtectedBranchRequiredStatusChecksContexts": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "addProtectedBranchTeamRestrictions": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "addProtectedBranchUserRestrictions": {
      "method": "POST",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "checkCollaborator": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "compareCommits": {
      "method": "GET",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/compare/:base...:head"
    },
    "create": {
      "alias": "repos.createForAuthenticatedUser",
      "deprecated": "`repos.create()` is deprecated, use `repos.createForAuthenticatedUser()`"
    },
    "createCommitComment": {
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "line": {
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:sha/comments"
    },
    "createDeployment": {
      "headers": {
        "accept": "application/vnd.github.ant-man-preview+json"
      },
      "method": "POST",
      "params": {
        "auto_merge": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "production_environment": {
          "type": "boolean"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "required_contexts": {
          "type": "string[]"
        },
        "task": {
          "type": "string"
        },
        "transient_environment": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/deployments"
    },
    "createDeploymentStatus": {
      "headers": {
        "accept": "application/vnd.github.ant-man-preview+json"
      },
      "method": "POST",
      "params": {
        "auto_inactive": {
          "type": "boolean"
        },
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "enum": [
            "production",
            "staging",
            "qa"
          ],
          "type": "string"
        },
        "environment_url": {
          "type": "string"
        },
        "id": {
          "alias": "deployment_id",
          "deprecated": true
        },
        "log_url": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "error",
            "failure",
            "inactive",
            "in_progress",
            "queued",
            "pending",
            "success"
          ],
          "required": true,
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    "createFile": {
      "method": "PUT",
      "params": {
        "author": {
          "type": "object"
        },
        "author.email": {
          "required": true,
          "type": "string"
        },
        "author.name": {
          "required": true,
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "committer.email": {
          "required": true,
          "type": "string"
        },
        "committer.name": {
          "required": true,
          "type": "string"
        },
        "content": {
          "required": true,
          "type": "string"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "createForAuthenticatedUser": {
      "method": "POST",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "auto_init": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "gitignore_template": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "license_template": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "type": "integer"
        }
      },
      "url": "/user/repos"
    },
    "createForOrg": {
      "alias": "repos.createInOrg",
      "deprecated": "`repos.createForOrg()` is deprecated, use `repos.createInOrg()`"
    },
    "createFork": {
      "method": "POST",
      "params": {
        "organization": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/forks"
    },
    "createHook": {
      "method": "POST",
      "params": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "required": true,
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks"
    },
    "createInOrg": {
      "method": "POST",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "auto_init": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "gitignore_template": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "license_template": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/repos"
    },
    "createRelease": {
      "method": "POST",
      "params": {
        "body": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag_name": {
          "required": true,
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases"
    },
    "createStatus": {
      "method": "POST",
      "params": {
        "context": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "error",
            "failure",
            "pending",
            "success"
          ],
          "required": true,
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/statuses/:sha"
    },
    "declineInvitation": {
      "method": "DELETE",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations/:invitation_id"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "deleteAsset": {
      "alias": "repos.deleteReleaseAsset",
      "deprecated": "`repos.deleteAsset()` is deprecated, use `repos.deleteReleaseAsset()`"
    },
    "deleteCommitComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "deleteDeployKey": {
      "alias": "repos.removeDeployKey",
      "deprecated": "`repos.deleteDeployKey()` is deprecated, use `repos.removeDeployKey()`"
    },
    "deleteDownload": {
      "method": "DELETE",
      "params": {
        "download_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "download_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads/:download_id"
    },
    "deleteFile": {
      "method": "DELETE",
      "params": {
        "author": {
          "type": "object"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "deleteHook": {
      "method": "DELETE",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "deleteInvitation": {
      "method": "DELETE",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations/:invitation_id"
    },
    "deleteInvite": {
      "alias": "repos.deleteInvitation",
      "deprecated": "`repos.deleteInvite()` is deprecated, use `repos.deleteInvitation()`"
    },
    "deleteRelease": {
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "release_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "deleteReleaseAsset": {
      "method": "DELETE",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "asset_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "edit": {
      "alias": "repos.update",
      "deprecated": "`repos.edit()` is deprecated, use `repos.update()`"
    },
    "editAsset": {
      "alias": "repos.updateReleaseAsset",
      "deprecated": "`repos.editAsset()` is deprecated, use `repos.updateReleaseAsset()`"
    },
    "editHook": {
      "alias": "repos.updateHook",
      "deprecated": "`repos.editHook()` is deprecated, use `repos.updateHook()`"
    },
    "editRelease": {
      "alias": "repos.updateRelease",
      "deprecated": "`repos.editRelease()` is deprecated, use `repos.updateRelease()`"
    },
    "fork": {
      "alias": "repos.createFork",
      "deprecated": "`repos.fork()` is deprecated, use `repos.createFork()`"
    },
    "get": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "getAll": {
      "alias": "repos.list",
      "deprecated": "`repos.getAll()` is deprecated, use `repos.list()`"
    },
    "getAllCommitComments": {
      "alias": "repos.listCommitComments",
      "deprecated": "`repos.getAllCommitComments()` is deprecated, use `repos.listCommitComments()`"
    },
    "getArchiveLink": {
      "method": "GET",
      "params": {
        "archive_format": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/:archive_format/:ref"
    },
    "getAsset": {
      "alias": "repos.getReleaseAsset",
      "deprecated": "`repos.getAsset()` is deprecated, use `repos.getReleaseAsset()`"
    },
    "getAssets": {
      "alias": "repos.listAssetsForRelease",
      "deprecated": "`repos.getAssets()` is deprecated, use `repos.listAssetsForRelease()`"
    },
    "getBranch": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch"
    },
    "getBranchProtection": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "getBranches": {
      "alias": "repos.listBranches",
      "deprecated": "`repos.getBranches()` is deprecated, use `repos.listBranches()`"
    },
    "getById": {
      "method": "GET",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/:id"
    },
    "getClones": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "per": {
          "enum": [
            "day",
            "week"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/traffic/clones"
    },
    "getCodeFrequencyStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/code_frequency"
    },
    "getCollaboratorPermissionLevel": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username/permission"
    },
    "getCollaborators": {
      "alias": "repos.listCollaborators",
      "deprecated": "`repos.getCollaborators()` is deprecated, use `repos.listCollaborators()`"
    },
    "getCombinedStatusForRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/status"
    },
    "getCommit": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:sha"
    },
    "getCommitActivityStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/commit_activity"
    },
    "getCommitComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "getCommitComments": {
      "alias": "repos.listCommentsForCommit",
      "deprecated": "`repos.getCommitComments()` is deprecated, use `repos.listCommentsForCommit()`"
    },
    "getCommitRefSha": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref"
    },
    "getCommits": {
      "alias": "repos.listCommits",
      "deprecated": "`repos.getCommits()` is deprecated, use `repos.listCommits()`"
    },
    "getCommunityProfileMetrics": {
      "alias": "repos.retrieveCommunityProfileMetrics",
      "deprecated": "`repos.getCommunityProfileMetrics()` is deprecated, use `repos.retrieveCommunityProfileMetrics()`"
    },
    "getContent": {
      "alias": "repos.getContents",
      "deprecated": "`repos.getContent()` is deprecated, use `repos.getContents()`"
    },
    "getContents": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "getContributors": {
      "alias": "repos.listContributors",
      "deprecated": "`repos.getContributors()` is deprecated, use `repos.listContributors()`"
    },
    "getContributorsStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/contributors"
    },
    "getDeployKey": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "key_id",
          "deprecated": true
        },
        "key_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys/:key_id"
    },
    "getDeployKeys": {
      "alias": "repos.listDeployKeys",
      "deprecated": "`repos.getDeployKeys()` is deprecated, use `repos.listDeployKeys()`"
    },
    "getDeployment": {
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "deployment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id"
    },
    "getDeploymentStatus": {
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "deployment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "status_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id"
    },
    "getDeploymentStatuses": {
      "alias": "repos.listDeploymentStatuses",
      "deprecated": "`repos.getDeploymentStatuses()` is deprecated, use `repos.listDeploymentStatuses()`"
    },
    "getDeployments": {
      "alias": "repos.listDeployments",
      "deprecated": "`repos.getDeployments()` is deprecated, use `repos.listDeployments()`"
    },
    "getDownload": {
      "method": "GET",
      "params": {
        "download_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "download_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads/:download_id"
    },
    "getDownloads": {
      "alias": "repos.listDownloads",
      "deprecated": "`repos.getDownloads()` is deprecated, use `repos.listDownloads()`"
    },
    "getForOrg": {
      "alias": "repos.listForOrg",
      "deprecated": "`repos.getForOrg()` is deprecated, use `repos.listForOrg()`"
    },
    "getForUser": {
      "alias": "repos.listForUser",
      "deprecated": "`repos.getForUser()` is deprecated, use `repos.listForUser()`"
    },
    "getForks": {
      "alias": "repos.listForks",
      "deprecated": "`repos.getForks()` is deprecated, use `repos.listForks()`"
    },
    "getHook": {
      "method": "GET",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "getHooks": {
      "alias": "repos.listHooks",
      "deprecated": "`repos.getHooks()` is deprecated, use `repos.listHooks()`"
    },
    "getInvites": {
      "alias": "repos.listInvitations",
      "deprecated": "`repos.getInvites()` is deprecated, use `repos.listInvitations()`"
    },
    "getLanguages": {
      "alias": "repos.listLanguages",
      "deprecated": "`repos.getLanguages()` is deprecated, use `repos.listLanguages()`"
    },
    "getLatestPagesBuild": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds/latest"
    },
    "getLatestRelease": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/latest"
    },
    "getPages": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages"
    },
    "getPagesBuild": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "GET",
      "params": {
        "build_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "build_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds/:build_id"
    },
    "getPagesBuilds": {
      "alias": "repos.listPagesBuilds",
      "deprecated": "`repos.getPagesBuilds()` is deprecated, use `repos.listPagesBuilds()`"
    },
    "getParticipationStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/participation"
    },
    "getPaths": {
      "alias": "repos.getTopPaths",
      "deprecated": "`repos.getPaths()` is deprecated, use `repos.getTopPaths()`"
    },
    "getProtectedBranchAdminEnforcement": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "getProtectedBranchPullRequestReviewEnforcement": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "getProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "getProtectedBranchRequiredStatusChecks": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "getProtectedBranchRequiredStatusChecksContexts": {
      "alias": "repos.listProtectedBranchRequiredStatusChecksContexts",
      "deprecated": "`repos.getProtectedBranchRequiredStatusChecksContexts()` is deprecated, use `repos.listProtectedBranchRequiredStatusChecksContexts()`"
    },
    "getProtectedBranchRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    "getProtectedBranchTeamRestrictions": {
      "alias": "repos.listProtectedBranchTeamRestrictions",
      "deprecated": "`repos.getProtectedBranchTeamRestrictions()` is deprecated, use `repos.listProtectedBranchTeamRestrictions()`"
    },
    "getProtectedBranchUserRestrictions": {
      "alias": "repos.listProtectedBranchUserRestrictions",
      "deprecated": "`repos.getProtectedBranchUserRestrictions()` is deprecated, use `repos.listProtectedBranchUserRestrictions()`"
    },
    "getPublic": {
      "alias": "repos.listPublic",
      "deprecated": "`repos.getPublic()` is deprecated, use `repos.listPublic()`"
    },
    "getPunchCardStats": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/stats/punch_card"
    },
    "getReadme": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/readme"
    },
    "getReferrers": {
      "alias": "repos.getTopReferrers",
      "deprecated": "`repos.getReferrers()` is deprecated, use `repos.getTopReferrers()`"
    },
    "getRelease": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "release_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "getReleaseAsset": {
      "method": "GET",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "asset_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "getReleaseByTag": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/tags/:tag"
    },
    "getReleases": {
      "alias": "repos.listReleases",
      "deprecated": "`repos.getReleases()` is deprecated, use `repos.listReleases()`"
    },
    "getShaOfCommitRef": {
      "alias": "repos.getCommitRefSha",
      "deprecated": "`repos.getShaOfCommitRef()` is deprecated, use `repos.getCommitRefSha()`"
    },
    "getStatsCodeFrequency": {
      "alias": "repos.getCodeFrequencyStats",
      "deprecated": "`repos.getStatsCodeFrequency()` is deprecated, use `repos.getCodeFrequencyStats()`"
    },
    "getStatsCommitActivity": {
      "alias": "repos.getCommitActivityStats",
      "deprecated": "`repos.getStatsCommitActivity()` is deprecated, use `repos.getCommitActivityStats()`"
    },
    "getStatsContributors": {
      "alias": "repos.getContributorsStats",
      "deprecated": "`repos.getStatsContributors()` is deprecated, use `repos.getContributorsStats()`"
    },
    "getStatsParticipation": {
      "alias": "repos.getParticipationStats",
      "deprecated": "`repos.getStatsParticipation()` is deprecated, use `repos.getParticipationStats()`"
    },
    "getStatsPunchCard": {
      "alias": "repos.getPunchCardStats",
      "deprecated": "`repos.getStatsPunchCard()` is deprecated, use `repos.getPunchCardStats()`"
    },
    "getStatuses": {
      "alias": "repos.listStatusesForRef",
      "deprecated": "`repos.getStatuses()` is deprecated, use `repos.listStatusesForRef()`"
    },
    "getTags": {
      "alias": "repos.listTags",
      "deprecated": "`repos.getTags()` is deprecated, use `repos.listTags()`"
    },
    "getTeams": {
      "alias": "repos.listTeams",
      "deprecated": "`repos.getTeams()` is deprecated, use `repos.listTeams()`"
    },
    "getTopPaths": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/traffic/popular/paths"
    },
    "getTopReferrers": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/traffic/popular/referrers"
    },
    "getTopics": {
      "alias": "repos.listTopics",
      "deprecated": "`repos.getTopics()` is deprecated, use `repos.listTopics()`"
    },
    "getViews": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "per": {
          "enum": [
            "day",
            "week"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/traffic/views"
    },
    "list": {
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "owner",
            "collaborator",
            "organization_member"
          ],
          "type": "string"
        },
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ],
          "type": "string"
        },
        "visibility": {
          "enum": [
            "all",
            "public",
            "private"
          ],
          "type": "string"
        }
      },
      "url": "/user/repos"
    },
    "listAssetsForRelease": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "release_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id/assets"
    },
    "listBranches": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "protected": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches"
    },
    "listCollaborators": {
      "method": "GET",
      "params": {
        "affiliation": {
          "enum": [
            "outside",
            "direct",
            "all"
          ],
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators"
    },
    "listCommentsForCommit": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/comments"
    },
    "listCommitComments": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "author": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "until": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits"
    },
    "listContributors": {
      "method": "GET",
      "params": {
        "anon": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contributors"
    },
    "listDeployKeys": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys"
    },
    "listDeploymentStatuses": {
      "headers": {
        "accept": "application/vnd.github.ant-man-preview+json"
      },
      "method": "GET",
      "params": {
        "deployment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "deployment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    "listDeployments": {
      "headers": {
        "accept": "application/vnd.github.ant-man-preview+json"
      },
      "method": "GET",
      "params": {
        "environment": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "task": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/deployments"
    },
    "listDownloads": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/downloads"
    },
    "listForOrg": {
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "type": {
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member"
          ],
          "type": "string"
        }
      },
      "url": "/orgs/:org/repos"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "all",
            "owner",
            "member"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/repos"
    },
    "listForks": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "newest",
            "oldest",
            "stargazers"
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/forks"
    },
    "listHooks": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks"
    },
    "listInvitations": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations"
    },
    "listInvitationsForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/repository_invitations"
    },
    "listLanguages": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/languages"
    },
    "listPagesBuilds": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds"
    },
    "listProtectedBranchRequiredStatusChecksContexts": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "listProtectedBranchTeamRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "listProtectedBranchUserRestrictions": {
      "method": "GET",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "listPublic": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/repositories"
    },
    "listReleases": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases"
    },
    "listStatusesForRef": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "ref": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/commits/:ref/statuses"
    },
    "listTags": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/tags"
    },
    "listTeams": {
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/teams"
    },
    "listTopics": {
      "headers": {
        "accept": "application/vnd.github.mercy-preview+json"
      },
      "method": "GET",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/topics"
    },
    "merge": {
      "method": "POST",
      "params": {
        "base": {
          "required": true,
          "type": "string"
        },
        "commit_message": {
          "type": "string"
        },
        "head": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/merges"
    },
    "pingHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id/pings"
    },
    "removeBranchProtection": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "removeCollaborator": {
      "method": "DELETE",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/collaborators/:username"
    },
    "removeDeployKey": {
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "key_id",
          "deprecated": true
        },
        "key_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/keys/:key_id"
    },
    "removeProtectedBranchAdminEnforcement": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    "removeProtectedBranchPullRequestReviewEnforcement": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "removeProtectedBranchRequiredSignatures": {
      "headers": {
        "accept": "application/vnd.github.zzzax-preview+json"
      },
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    "removeProtectedBranchRequiredStatusChecks": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "removeProtectedBranchRequiredStatusChecksContexts": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "removeProtectedBranchRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    "removeProtectedBranchTeamRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "removeProtectedBranchUserRestrictions": {
      "method": "DELETE",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "replaceProtectedBranchRequiredStatusChecksContexts": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    "replaceProtectedBranchTeamRestrictions": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "teams": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    "replaceProtectedBranchUserRestrictions": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "users": {
          "mapTo": "data",
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    "replaceTopics": {
      "headers": {
        "accept": "application/vnd.github.mercy-preview+json"
      },
      "method": "PUT",
      "params": {
        "names": {
          "required": true,
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/topics"
    },
    "requestPageBuild": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "POST",
      "params": {
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages/builds"
    },
    "retrieveCommunityProfileMetrics": {
      "headers": {
        "accept": "application/vnd.github.black-panther-preview+json"
      },
      "method": "GET",
      "params": {
        "name": {
          "alias": "repo",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/community/profile"
    },
    "reviewUserPermissionLevel": {
      "alias": "repos.getCollaboratorPermissionLevel",
      "deprecated": "`repos.reviewUserPermissionLevel()` is deprecated, use `repos.getCollaboratorPermissionLevel()`"
    },
    "testHook": {
      "alias": "repos.testPushHook",
      "deprecated": "`repos.testHook()` is deprecated, use `repos.testPushHook()`"
    },
    "testPushHook": {
      "method": "POST",
      "params": {
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id/tests"
    },
    "transfer": {
      "headers": {
        "accept": "application/vnd.github.nightshade-preview+json"
      },
      "method": "POST",
      "params": {
        "new_owner": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "alias": "team_ids",
          "deprecated": true
        },
        "team_ids": {
          "type": "integer[]"
        }
      },
      "url": "/repos/:owner/:repo/transfer"
    },
    "update": {
      "method": "PATCH",
      "params": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "archived": {
          "type": "boolean"
        },
        "default_branch": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_projects": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo"
    },
    "updateBranchProtection": {
      "method": "PUT",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "enforce_admins": {
          "allowNull": true,
          "required": true,
          "type": "boolean"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "required_pull_request_reviews": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "required_pull_request_reviews.dismiss_stale_reviews": {
          "type": "boolean"
        },
        "required_pull_request_reviews.dismissal_restrictions": {
          "type": "object"
        },
        "required_pull_request_reviews.dismissal_restrictions.teams": {
          "type": "string[]"
        },
        "required_pull_request_reviews.dismissal_restrictions.users": {
          "type": "string[]"
        },
        "required_pull_request_reviews.require_code_owner_reviews": {
          "type": "boolean"
        },
        "required_pull_request_reviews.required_approving_review_count": {
          "type": "integer"
        },
        "required_status_checks": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "required_status_checks.contexts": {
          "required": true,
          "type": "string[]"
        },
        "required_status_checks.strict": {
          "required": true,
          "type": "boolean"
        },
        "restrictions": {
          "allowNull": true,
          "required": true,
          "type": "object"
        },
        "restrictions.teams": {
          "type": "string[]"
        },
        "restrictions.users": {
          "type": "string[]"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection"
    },
    "updateCommitComment": {
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "comment_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/comments/:comment_id"
    },
    "updateFile": {
      "method": "PUT",
      "params": {
        "author": {
          "type": "object"
        },
        "author.email": {
          "required": true,
          "type": "string"
        },
        "author.name": {
          "required": true,
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "committer": {
          "type": "object"
        },
        "committer.email": {
          "required": true,
          "type": "string"
        },
        "committer.name": {
          "required": true,
          "type": "string"
        },
        "content": {
          "required": true,
          "type": "string"
        },
        "message": {
          "required": true,
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "path": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "sha": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/contents/:path"
    },
    "updateHook": {
      "method": "PATCH",
      "params": {
        "active": {
          "type": "boolean"
        },
        "add_events": {
          "type": "string[]"
        },
        "config": {
          "type": "object"
        },
        "config.content_type": {
          "type": "string"
        },
        "config.insecure_ssl": {
          "type": "string"
        },
        "config.secret": {
          "type": "string"
        },
        "config.url": {
          "required": true,
          "type": "string"
        },
        "events": {
          "type": "string[]"
        },
        "hook_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "hook_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "remove_events": {
          "type": "string[]"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/hooks/:hook_id"
    },
    "updateInformationAboutPagesSite": {
      "headers": {
        "accept": "application/vnd.github.mister-fantastic-preview+json"
      },
      "method": "PUT",
      "params": {
        "cname": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "source": {
          "enum": [
            "\"gh-pages\"",
            "\"master\"",
            "\"master /docs\""
          ],
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/pages"
    },
    "updateInvitation": {
      "method": "PATCH",
      "params": {
        "invitation_id": {
          "required": true,
          "type": "integer"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "permissions": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/invitations/:invitation_id"
    },
    "updateInvite": {
      "alias": "repos.updateInvitation",
      "deprecated": "`repos.updateInvite()` is deprecated, use `repos.updateInvitation()`"
    },
    "updateProtectedBranchPullRequestReviewEnforcement": {
      "method": "PATCH",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "dismiss_stale_reviews": {
          "type": "boolean"
        },
        "dismissal_restrictions": {
          "type": "object"
        },
        "dismissal_restrictions.teams": {
          "type": "string[]"
        },
        "dismissal_restrictions.users": {
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "require_code_owner_reviews": {
          "type": "boolean"
        },
        "required_approving_review_count": {
          "type": "integer"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    "updateProtectedBranchRequiredStatusChecks": {
      "method": "PATCH",
      "params": {
        "branch": {
          "required": true,
          "type": "string"
        },
        "contexts": {
          "type": "string[]"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "strict": {
          "type": "boolean"
        }
      },
      "url": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    "updateRelease": {
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "id": {
          "alias": "release_id",
          "deprecated": true
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "release_id": {
          "required": true,
          "type": "integer"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "tag_name": {
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/:release_id"
    },
    "updateReleaseAsset": {
      "method": "PATCH",
      "params": {
        "asset_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "asset_id",
          "deprecated": true
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    "uploadAsset": {
      "alias": "repos.uploadReleaseAsset",
      "deprecated": "`repos.uploadAsset()` is deprecated, use `repos.uploadReleaseAsset()`"
    },
    "uploadReleaseAsset": {
      "method": "POST",
      "params": {
        "contentLength": {
          "alias": "headers.content-length",
          "deprecated": true
        },
        "contentType": {
          "alias": "headers.content-type",
          "deprecated": true
        },
        "file": {
          "mapTo": "data",
          "required": true,
          "type": "string | object"
        },
        "headers.content-length": {
          "required": true,
          "type": "integer"
        },
        "headers.content-type": {
          "required": true,
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "url": {
          "required": true,
          "type": "string"
        }
      },
      "url": ":url"
    }
  },
  "search": {
    "code": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "indexed"
          ],
          "type": "string"
        }
      },
      "url": "/search/code"
    },
    "commits": {
      "headers": {
        "accept": "application/vnd.github.cloak-preview+json"
      },
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "author-date",
            "committer-date"
          ],
          "type": "string"
        }
      },
      "url": "/search/commits"
    },
    "issues": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "comments",
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/issues"
    },
    "labels": {
      "headers": {
        "accept": "application/vnd.github.symmetra-preview+json"
      },
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "repository_id": {
          "required": true,
          "type": "integer"
        },
        "sort": {
          "enum": [
            "created",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/labels"
    },
    "repos": {
      "headers": {
        "accept": "application/vnd.github.mercy-preview+json"
      },
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "stars",
            "forks",
            "updated"
          ],
          "type": "string"
        }
      },
      "url": "/search/repositories"
    },
    "topics": {
      "headers": {
        "accept": "application/vnd.github.mercy-preview+json"
      },
      "method": "GET",
      "params": {
        "q": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/search/topics"
    },
    "users": {
      "method": "GET",
      "params": {
        "order": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "q": {
          "required": true,
          "type": "string"
        },
        "sort": {
          "enum": [
            "followers",
            "repositories",
            "joined"
          ],
          "type": "string"
        }
      },
      "url": "/search/users"
    }
  },
  "teams": {
    "addMember": {
      "method": "PUT",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "addOrUpdateMembership": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "PUT",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "role": {
          "enum": [
            "member",
            "maintainer"
          ],
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "addOrUpdateProject": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "PUT",
      "params": {
        "permission": {
          "enum": [
            "read",
            "write",
            "admin"
          ],
          "type": "string"
        },
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "addOrUpdateRepo": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "PUT",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "org": {
          "alias": "owner",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "checkManagesRepo": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "create": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "POST",
      "params": {
        "description": {
          "type": "string"
        },
        "maintainers": {
          "type": "string[]"
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "org": {
          "required": true,
          "type": "string"
        },
        "parent_team_id": {
          "type": "integer"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "privacy": {
          "enum": [
            "secret",
            "closed"
          ],
          "type": "string"
        },
        "repo_names": {
          "type": "string[]"
        }
      },
      "url": "/orgs/:org/teams"
    },
    "createDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "title": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/discussions"
    },
    "createDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "POST",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments"
    },
    "delete": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "deleteDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "DELETE",
      "params": {
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "deleteDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "DELETE",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    "get": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "getDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "getDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    "getMember": {
      "method": "GET",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "getMembership": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "list": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "org": {
          "required": true,
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/orgs/:org/teams"
    },
    "listChild": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/teams"
    },
    "listDiscussionComments": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments"
    },
    "listDiscussions": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "GET",
      "params": {
        "direction": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions"
    },
    "listForAuthenticatedUser": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/teams"
    },
    "listMembers": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "role": {
          "enum": [
            "member",
            "maintainer",
            "all"
          ],
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/members"
    },
    "listPendingInvitations": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/invitations"
    },
    "listProjects": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects"
    },
    "listRepos": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "GET",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos"
    },
    "removeMember": {
      "method": "DELETE",
      "params": {
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/members/:username"
    },
    "removeMembership": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/:team_id/memberships/:username"
    },
    "removeProject": {
      "method": "DELETE",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "removeRepo": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "owner": {
          "required": true,
          "type": "string"
        },
        "repo": {
          "required": true,
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/repos/:owner/:repo"
    },
    "reviewProject": {
      "headers": {
        "accept": "application/vnd.github.inertia-preview+json"
      },
      "method": "GET",
      "params": {
        "project_id": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/projects/:project_id"
    },
    "update": {
      "headers": {
        "accept": "application/vnd.github.hellcat-preview+json"
      },
      "method": "PATCH",
      "params": {
        "description": {
          "type": "string"
        },
        "id": {
          "alias": "team_id",
          "deprecated": true
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "parent_team_id": {
          "type": "integer"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ],
          "type": "string"
        },
        "privacy": {
          "type": "string"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id"
    },
    "updateDiscussion": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "type": "string"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number"
    },
    "updateDiscussionComment": {
      "headers": {
        "accept": "application/vnd.github.echo-preview+json"
      },
      "method": "PATCH",
      "params": {
        "body": {
          "required": true,
          "type": "string"
        },
        "comment_number": {
          "required": true,
          "type": "integer"
        },
        "discussion_number": {
          "required": true,
          "type": "integer"
        },
        "team_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    }
  },
  "users": {
    "acceptRepoInvite": {
      "alias": "repos.acceptInvitation",
      "deprecated": "`users.acceptRepoInvite()` is deprecated, use `repos.acceptInvitation()`"
    },
    "addEmails": {
      "method": "POST",
      "params": {
        "emails": {
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/user/emails"
    },
    "addRepoToInstallation": {
      "alias": "apps.addRepoToInstallation",
      "deprecated": "`integrations.addRepoToInstallation()` is deprecated, use `apps.addRepoToInstallation()`",
      "params": {}
    },
    "block": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/blocks/:username"
    },
    "blockUser": {
      "alias": "users.block",
      "deprecated": "`users.blockUser()` is deprecated, use `users.block()`"
    },
    "checkBlocked": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/blocks/:username"
    },
    "checkBlockedUser": {
      "alias": "users.checkBlocked",
      "deprecated": "`users.checkBlockedUser()` is deprecated, use `users.checkBlocked()`"
    },
    "checkFollowing": {
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "checkFollowingForUser": {
      "method": "GET",
      "params": {
        "target_user": {
          "required": true,
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/following/:target_user"
    },
    "checkIfOneFollowersOther": {
      "alias": "users.checkFollowingForUser",
      "deprecated": "`users.checkIfOneFollowersOther()` is deprecated, use `users.checkFollowingForUser()`"
    },
    "createGpgKey": {
      "method": "POST",
      "params": {
        "armored_public_key": {
          "type": "string"
        }
      },
      "url": "/user/gpg_keys"
    },
    "createKey": {
      "alias": "users.createPublicKey",
      "deprecated": "`users.createKey()` is deprecated, use `users.createPublicKey()`"
    },
    "createPublicKey": {
      "method": "POST",
      "params": {
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "url": "/user/keys"
    },
    "declineRepoInvite": {
      "alias": "repos.declineInvitation",
      "deprecated": "`users.declineRepoInvite()` is deprecated, use `repos.declineInvitation()`"
    },
    "deleteEmails": {
      "method": "DELETE",
      "params": {
        "emails": {
          "required": true,
          "type": "string[]"
        }
      },
      "url": "/user/emails"
    },
    "deleteGpgKey": {
      "method": "DELETE",
      "params": {
        "gpg_key_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "gpg_key_id",
          "deprecated": true
        }
      },
      "url": "/user/gpg_keys/:gpg_key_id"
    },
    "deleteKey": {
      "alias": "users.deletePublicKey",
      "deprecated": "`users.deleteKey()` is deprecated, use `users.deletePublicKey()`"
    },
    "deletePublicKey": {
      "method": "DELETE",
      "params": {
        "id": {
          "alias": "key_id",
          "deprecated": true
        },
        "key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/keys/:key_id"
    },
    "demote": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/site_admin"
    },
    "editOrgMembership": {
      "alias": "orgs.updateMembership",
      "deprecated": "`users.editOrgMembership()` is deprecated, use `orgs.updateMembership()`"
    },
    "follow": {
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "followUser": {
      "alias": "users.follow",
      "deprecated": "`users.followUser()` is deprecated, use `users.follow()`"
    },
    "get": {
      "alias": "users.getAuthenticated",
      "deprecated": "`users.get()` is deprecated, use `users.getAuthenticated()`"
    },
    "getAll": {
      "alias": "users.list",
      "deprecated": "`users.getAll()` is deprecated, use `users.list()`"
    },
    "getAuthenticated": {
      "method": "GET",
      "params": {},
      "url": "/user"
    },
    "getBlockedUsers": {
      "alias": "users.listBlocked",
      "deprecated": "`users.getBlockedUsers()` is deprecated, use `users.listBlocked()`"
    },
    "getById": {
      "method": "GET",
      "params": {
        "id": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/:id"
    },
    "getByUsername": {
      "method": "GET",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username"
    },
    "getContextForUser": {
      "headers": {
        "accept": "application/vnd.github.hagar-preview+json"
      },
      "method": "GET",
      "params": {
        "subject_id": {
          "type": "string"
        },
        "subject_type": {
          "enum": [
            "organization",
            "repository",
            "issue",
            "pull_request"
          ],
          "type": "string"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/hovercard"
    },
    "getEmails": {
      "alias": "users.listEmails",
      "deprecated": "`users.getEmails()` is deprecated, use `users.listEmails()`"
    },
    "getFollowers": {
      "alias": "users.listFollowersForAuthenticatedUser",
      "deprecated": "`users.getFollowers()` is deprecated, use `users.listFollowersForAuthenticatedUser()`"
    },
    "getFollowersForUser": {
      "alias": "users.listFollowersForUser",
      "deprecated": "`users.getFollowersForUser()` is deprecated, use `users.listFollowersForUser()`"
    },
    "getFollowing": {
      "alias": "users.listFollowingForAuthenticatedUser",
      "deprecated": "`users.getFollowing()` is deprecated, use `users.listFollowingForAuthenticatedUser()`"
    },
    "getFollowingForUser": {
      "alias": "users.listFollowingForUser",
      "deprecated": "`users.getFollowingForUser()` is deprecated, use `users.listFollowingForUser()`"
    },
    "getForUser": {
      "alias": "users.getByUsername",
      "deprecated": "`users.getForUser()` is deprecated, use `users.getByUsername()`"
    },
    "getGpgKey": {
      "method": "GET",
      "params": {
        "gpg_key_id": {
          "required": true,
          "type": "integer"
        },
        "id": {
          "alias": "gpg_key_id",
          "deprecated": true
        }
      },
      "url": "/user/gpg_keys/:gpg_key_id"
    },
    "getGpgKeys": {
      "alias": "users.listGpgKeys",
      "deprecated": "`users.getGpgKeys()` is deprecated, use `users.listGpgKeys()`"
    },
    "getGpgKeysForUser": {
      "alias": "users.listGpgKeysForUser",
      "deprecated": "`users.getGpgKeysForUser()` is deprecated, use `users.listGpgKeysForUser()`"
    },
    "getInstallationRepos": {
      "alias": "apps.listInstallationReposForAuthenticatedUser",
      "deprecated": "`users.getInstallationRepos()` is deprecated, use `apps.listInstallationReposForAuthenticatedUser()`"
    },
    "getInstallations": {
      "alias": "apps.listInstallationsForAuthenticatedUser",
      "deprecated": "`users.getInstallations()` is deprecated, use `apps.listInstallationsForAuthenticatedUser()`"
    },
    "getKey": {
      "alias": "users.getPublicKey",
      "deprecated": "`users.getKey()` is deprecated, use `users.getPublicKey()`"
    },
    "getKeys": {
      "alias": "users.listPublicKeys",
      "deprecated": "`users.getKeys()` is deprecated, use `users.listPublicKeys()`"
    },
    "getKeysForUser": {
      "alias": "users.listPublicKeysForUser",
      "deprecated": "`users.getKeysForUser()` is deprecated, use `users.listPublicKeysForUser()`"
    },
    "getMarketplacePurchases": {
      "alias": "apps.listMarketplacePurchasesForAuthenticatedUser",
      "deprecated": "`users.getMarketplacePurchases()` is deprecated, use `apps.listMarketplacePurchasesForAuthenticatedUser()`"
    },
    "getMarketplaceStubbedPurchases": {
      "alias": "apps.listMarketplacePurchasesForAuthenticatedUserStubbed",
      "deprecated": "`users.getMarketplaceStubbedPurchases()` is deprecated, use `apps.listMarketplacePurchasesForAuthenticatedUserStubbed()`"
    },
    "getOrgMembership": {
      "alias": "orgs.getMembershipForAuthenticatedUser",
      "deprecated": "`users.getOrgMembership()` is deprecated, use `orgs.getMembershipForAuthenticatedUser()`"
    },
    "getOrgMemberships": {
      "alias": "orgs.listMemberships",
      "deprecated": "`users.getOrgMemberships()` is deprecated, use `orgs.listMemberships()`"
    },
    "getOrgs": {
      "alias": "orgs.listForAuthenticatedUser",
      "deprecated": "`users.getOrgs()` is deprecated, use `orgs.listForAuthenticatedUser()`"
    },
    "getPublicEmails": {
      "alias": "users.listPublicEmails",
      "deprecated": "`users.getPublicEmails()` is deprecated, use `users.listPublicEmails()`"
    },
    "getPublicKey": {
      "method": "GET",
      "params": {
        "id": {
          "alias": "key_id",
          "deprecated": true
        },
        "key_id": {
          "required": true,
          "type": "integer"
        }
      },
      "url": "/user/keys/:key_id"
    },
    "getRepoInvites": {
      "alias": "repos.listInvitationsForAuthenticatedUser",
      "deprecated": "`users.getRepoInvites()` is deprecated, use `repos.listInvitationsForAuthenticatedUser()`"
    },
    "getTeams": {
      "alias": "teams.listForAuthenticatedUser",
      "deprecated": "`users.getTeams()` is deprecated, use `teams.listForAuthenticatedUser()`"
    },
    "list": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "since": {
          "type": "string"
        }
      },
      "url": "/users"
    },
    "listBlocked": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "GET",
      "params": {},
      "url": "/user/blocks"
    },
    "listEmails": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/emails"
    },
    "listFollowersForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/followers"
    },
    "listFollowersForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/followers"
    },
    "listFollowingForAuthenticatedUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/following"
    },
    "listFollowingForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/following"
    },
    "listGpgKeys": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/gpg_keys"
    },
    "listGpgKeysForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/gpg_keys"
    },
    "listPublicEmails": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/public_emails"
    },
    "listPublicKeys": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        }
      },
      "url": "/user/keys"
    },
    "listPublicKeysForUser": {
      "method": "GET",
      "params": {
        "page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/keys"
    },
    "promote": {
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/site_admin"
    },
    "removeRepoFromInstallation": {
      "alias": "apps.removeRepoFromInstallation",
      "deprecated": "`integrations.removeRepoFromInstallation()` is deprecated, use `apps.removeRepoFromInstallation()`",
      "params": {}
    },
    "suspend": {
      "method": "PUT",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/suspended"
    },
    "togglePrimaryEmailVisibility": {
      "method": "PATCH",
      "params": {
        "email": {
          "required": true,
          "type": "string"
        },
        "visibility": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/email/visibility"
    },
    "unblock": {
      "headers": {
        "accept": "application/vnd.github.giant-sentry-fist-preview+json"
      },
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/blocks/:username"
    },
    "unblockUser": {
      "alias": "users.unblock",
      "deprecated": "`users.unblockUser()` is deprecated, use `users.unblock()`"
    },
    "unfollow": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/following/:username"
    },
    "unfollowUser": {
      "alias": "users.unfollow",
      "deprecated": "`users.unfollowUser()` is deprecated, use `users.unfollow()`"
    },
    "unsuspend": {
      "method": "DELETE",
      "params": {
        "username": {
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/:username/suspended"
    },
    "update": {
      "alias": "users.updateAuthenticated",
      "deprecated": "`users.update()` is deprecated, use `users.updateAuthenticated()`"
    },
    "updateAuthenticated": {
      "method": "PATCH",
      "params": {
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "url": "/user"
    }
  }
}
